/*
 * serial.cpp
 *
 *  Created on: 2015年8月11日
 *      Author: i
 */

#include "../IDReader/IDReader.h"

#include <HardwareSerial.h>

void IDReader::runCommand(byte* command, int len) {
	Serial1.write(command, len);
	Serial.print("run command:");
	for (int i = 0; i < len; i++) {
		Serial.print(" 0x");
		Serial.print(command[i], HEX);
	}
	Serial.println('\0');
}
byte* IDReader::carRead() {
	Serial.println("carRead");
	memset(carInfo, 0xFF, sizeof(carInfo));
	int i = 0;
	long current = millis();
	runCommand(commands.readCard2, sizeof(commands.readCard2));
	while (current + 2000 > millis() && i < 512) {
		int a = Serial1.available();
		if (a > 0) {
			for (int j = 0; j < a; j++, i++) {
				carInfo[i] = Serial1.read();
			}
		}
	}
	Serial.println("readed");
	return carInfo;
}
int IDReader::readSerial() {
	while (Serial1.available() == 0) {
		Serial.print('.');
		delay(5);
	}
	Serial.println('\0');
	memset(readed, 0, sizeof(readed));
	int size = Serial1.available();
	Serial.print("to read avaliable is ");
	Serial.println(size);
	int i = 0;
	while (Serial1.available()) {
		byte b = Serial1.read();
		readed[i] = b;
		Serial.print(" 0x");
		Serial.print(b, HEX);
	}
	Serial.println('\0');
	return size;
}
void IDReader::readPrepary() {
	Serial.println("readPrepary");
	runCommand(commands.readCard, sizeof(commands.readCard));
	int length = readSerial();
	if (length == result.carReadyLength) {
		Serial.println("car is ready to read");
		carRead();
	}
	Serial.println('\0');
	for (int i = 0; i < sizeof(carInfo); i++) {
		Serial.print(' ');
		Serial.print(carInfo[i], HEX);
	}
	Serial.println('\0');
}

void IDReader::readHeartbit() {
	Serial.println("readHeartbit2");
	int length = readSerial();
	Serial.println();
	if (length == result.carTouchLength) {
		Serial.println("car touched so try to readCard");
		readPrepary();
	}
}
void IDReader::heartbit() {
	Serial.println("heartbit");
	runCommand(commands.heartbit, sizeof(commands.heartbit));
	Serial.println("read hearbit");
	readSerial();
	delay(10);
	Serial.println("heartbit2");
	runCommand(commands.heartbit2, sizeof(commands.heartbit2));
	readHeartbit();
}
