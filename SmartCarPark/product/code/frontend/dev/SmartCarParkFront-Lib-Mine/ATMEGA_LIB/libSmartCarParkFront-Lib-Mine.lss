In archive libSmartCarParkFront-Lib-Mine.a:

SerialCamera.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000318  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00000942  00000000  00000000  0000034c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000012  00000000  00000000  00000c8e  2**0
                  CONTENTS, READONLY

SdCard.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .group        00000008  00000000  00000000  00000034  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  1 .text         00000000  00000000  00000000  0000003c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .data         00000000  00000000  00000000  0000003c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000000  00000000  00000000  0000003c  2**0
                  ALLOC
  4 .stab         00001368  00000000  00000000  0000003c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .stabstr      000037ec  00000000  00000000  000013a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .rodata.str1.1 00000269  00000000  00000000  00004b90  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text._ZN6SdCard11checkSdCardEv 000001ec  00000000  00000000  00004df9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN6SdCard4playEv 0000003e  00000000  00000000  00004fe5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN4FileaSERKS_ 00000062  00000000  00000000  00005023  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN6SdCard9writeFileEPcS0_ 000000da  00000000  00000000  00005085  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN6SdCard8readFileEPc 000000be  00000000  00000000  0000515f  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .comment      00000012  00000000  00000000  0000521d  2**0
                  CONTENTS, READONLY

Disassembly of section .text._ZN6SdCard11checkSdCardEv:

00000000 <_ZN6SdCard11checkSdCardEv>:
	if (!SD.begin(chipSelect)) {
		Serial.println("initialization failed!");
		return;
	}
}
void SdCard::readFile(char* fileName) {
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e0       	ldi	r23, 0x00	; 0
  16:	80 e0       	ldi	r24, 0x00	; 0
  18:	90 e0       	ldi	r25, 0x00	; 0
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  1e:	60 e0       	ldi	r22, 0x00	; 0
	Serial.print("readFile:");
  20:	70 e0       	ldi	r23, 0x00	; 0
  22:	80 e0       	ldi	r24, 0x00	; 0
  24:	90 e0       	ldi	r25, 0x00	; 0
  26:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  2a:	4a e0       	ldi	r20, 0x0A	; 10
	Serial.println(fileName);
  2c:	50 e0       	ldi	r21, 0x00	; 0
  2e:	64 e0       	ldi	r22, 0x04	; 4
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	80 e0       	ldi	r24, 0x00	; 0
  34:	90 e0       	ldi	r25, 0x00	; 0
	myFile = SD.open(fileName);
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  3a:	7e 01       	movw	r14, r28
  3c:	8d e1       	ldi	r24, 0x1D	; 29
  3e:	e8 0e       	add	r14, r24
  40:	f1 1c       	adc	r15, r1
  42:	48 81       	ld	r20, Y
  44:	61 e0       	ldi	r22, 0x01	; 1
  46:	c7 01       	movw	r24, r14
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  4c:	81 11       	cpse	r24, r1
  4e:	00 c0       	rjmp	.+0      	; 0x50 <_ZN6SdCard11checkSdCardEv+0x50>
  50:	60 e0       	ldi	r22, 0x00	; 0
  52:	70 e0       	ldi	r23, 0x00	; 0
  54:	80 e0       	ldi	r24, 0x00	; 0
	if (myFile) {
  56:	90 e0       	ldi	r25, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  5c:	60 e0       	ldi	r22, 0x00	; 0
  5e:	70 e0       	ldi	r23, 0x00	; 0
		Serial.println(fileName);
  60:	80 e0       	ldi	r24, 0x00	; 0
  62:	90 e0       	ldi	r25, 0x00	; 0
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  68:	60 e0       	ldi	r22, 0x00	; 0
		while (myFile.available()) {
  6a:	70 e0       	ldi	r23, 0x00	; 0
  6c:	80 e0       	ldi	r24, 0x00	; 0
  6e:	90 e0       	ldi	r25, 0x00	; 0
  70:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
			Serial.write(myFile.read());
  74:	60 e0       	ldi	r22, 0x00	; 0
  76:	70 e0       	ldi	r23, 0x00	; 0
  78:	00 c0       	rjmp	.+0      	; 0x7a <_ZN6SdCard11checkSdCardEv+0x7a>
    virtual void flush(void);
    virtual size_t write(uint8_t);
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
  7a:	60 e0       	ldi	r22, 0x00	; 0
  7c:	70 e0       	ldi	r23, 0x00	; 0
  7e:	80 e0       	ldi	r24, 0x00	; 0
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
		}
		myFile.close();
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	70 e0       	ldi	r23, 0x00	; 0
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
	} else {
		Serial.print("error opening to read ");
  8e:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  92:	88 a5       	ldd	r24, Y+40	; 0x28
  94:	82 30       	cpi	r24, 0x02	; 2
  96:	01 f0       	breq	.+0      	; 0x98 <_ZN6SdCard11checkSdCardEv+0x98>
  98:	83 30       	cpi	r24, 0x03	; 3
		Serial.println(fileName);
  9a:	01 f0       	breq	.+0      	; 0x9c <_ZN6SdCard11checkSdCardEv+0x9c>
  9c:	81 30       	cpi	r24, 0x01	; 1
  9e:	01 f4       	brne	.+0      	; 0xa0 <_ZN6SdCard11checkSdCardEv+0xa0>
  a0:	60 e0       	ldi	r22, 0x00	; 0
  a2:	70 e0       	ldi	r23, 0x00	; 0
	}
}
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <_ZN6SdCard11checkSdCardEv+0xa6>
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	70 e0       	ldi	r23, 0x00	; 0
  aa:	00 c0       	rjmp	.+0      	; 0xac <_ZN6SdCard11checkSdCardEv+0xac>
  ac:	60 e0       	ldi	r22, 0x00	; 0
  ae:	70 e0       	ldi	r23, 0x00	; 0
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <_ZN6SdCard11checkSdCardEv+0xb2>
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  be:	8e 01       	movw	r16, r28
  c0:	07 5d       	subi	r16, 0xD7	; 215
  c2:	1f 4f       	sbci	r17, 0xFF	; 255
  c4:	41 e0       	ldi	r20, 0x01	; 1
  c6:	b7 01       	movw	r22, r14
  c8:	c8 01       	movw	r24, r16
  ca:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  ce:	81 11       	cpse	r24, r1
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <_ZN6SdCard11checkSdCardEv+0xd2>
  d2:	40 e0       	ldi	r20, 0x00	; 0
  d4:	b7 01       	movw	r22, r14
  d6:	c8 01       	movw	r24, r16
  d8:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  dc:	81 11       	cpse	r24, r1
  de:	00 c0       	rjmp	.+0      	; 0xe0 <_ZN6SdCard11checkSdCardEv+0xe0>
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	70 e0       	ldi	r23, 0x00	; 0
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	1f 91       	pop	r17
  ee:	0f 91       	pop	r16
  f0:	ff 90       	pop	r15
  f2:	ef 90       	pop	r14
  f4:	df 90       	pop	r13
  f6:	cf 90       	pop	r12
  f8:	0c 94 00 00 	jmp	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 108:	fe 01       	movw	r30, r28
 10a:	e0 5c       	subi	r30, 0xC0	; 192
 10c:	ff 4f       	sbci	r31, 0xFF	; 255
 10e:	4a e0       	ldi	r20, 0x0A	; 10
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	60 81       	ld	r22, Z
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 124:	ad a5       	ldd	r26, Y+45	; 0x2d
 126:	4a a9       	ldd	r20, Y+50	; 0x32
 128:	5b a9       	ldd	r21, Y+51	; 0x33
 12a:	6c a9       	ldd	r22, Y+52	; 0x34
 12c:	7d a9       	ldd	r23, Y+53	; 0x35
 12e:	9a 01       	movw	r18, r20
 130:	ab 01       	movw	r20, r22
 132:	89 e0       	ldi	r24, 0x09	; 9
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	44 1f       	adc	r20, r20
 13a:	55 1f       	adc	r21, r21
 13c:	8a 95       	dec	r24
 13e:	01 f4       	brne	.+0      	; 0x140 <_ZN6SdCard11checkSdCardEv+0x140>
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 146:	6b 01       	movw	r12, r22
 148:	7c 01       	movw	r14, r24
 14a:	60 e0       	ldi	r22, 0x00	; 0
 14c:	70 e0       	ldi	r23, 0x00	; 0
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 156:	2a e0       	ldi	r18, 0x0A	; 10
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	b7 01       	movw	r22, r14
 15c:	a6 01       	movw	r20, r12
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	70 e0       	ldi	r23, 0x00	; 0
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 172:	b7 01       	movw	r22, r14
 174:	a6 01       	movw	r20, r12
 176:	9a e0       	ldi	r25, 0x0A	; 10
 178:	76 95       	lsr	r23
 17a:	67 95       	ror	r22
 17c:	57 95       	ror	r21
 17e:	47 95       	ror	r20
 180:	9a 95       	dec	r25
 182:	01 f4       	brne	.+0      	; 0x184 <_ZN6SdCard11checkSdCardEv+0x184>
 184:	2a e0       	ldi	r18, 0x0A	; 10
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 19c:	b7 01       	movw	r22, r14
 19e:	a6 01       	movw	r20, r12
 1a0:	24 e1       	ldi	r18, 0x14	; 20
 1a2:	76 95       	lsr	r23
 1a4:	67 95       	ror	r22
 1a6:	57 95       	ror	r21
 1a8:	47 95       	ror	r20
 1aa:	2a 95       	dec	r18
 1ac:	01 f4       	brne	.+0      	; 0x1ae <_ZN6SdCard11checkSdCardEv+0x1ae>
 1ae:	2a e0       	ldi	r18, 0x0A	; 10
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 1ba:	60 e0       	ldi	r22, 0x00	; 0
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 1c6:	c9 5b       	subi	r28, 0xB9	; 185
 1c8:	df 4f       	sbci	r29, 0xFF	; 255
 1ca:	b8 01       	movw	r22, r16
 1cc:	ce 01       	movw	r24, r28
 1ce:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard11checkSdCardEv>
 1d2:	40 e0       	ldi	r20, 0x00	; 0
 1d4:	67 e0       	ldi	r22, 0x07	; 7
 1d6:	ce 01       	movw	r24, r28
 1d8:	df 91       	pop	r29
 1da:	cf 91       	pop	r28
 1dc:	1f 91       	pop	r17
 1de:	0f 91       	pop	r16
 1e0:	ff 90       	pop	r15
 1e2:	ef 90       	pop	r14
 1e4:	df 90       	pop	r13
 1e6:	cf 90       	pop	r12
 1e8:	0c 94 00 00 	jmp	0	; 0x0 <_ZN6SdCard11checkSdCardEv>

Disassembly of section .text._ZN6SdCard4playEv:

00000000 <_ZN6SdCard4playEv>:
	if (!SD.begin(chipSelect)) {
		Serial.println("initialization failed!");
		return;
	}
}
void SdCard::readFile(char* fileName) {
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	61 e0       	ldi	r22, 0x01	; 1
   8:	84 e0       	ldi	r24, 0x04	; 4
   a:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard4playEv>
   e:	60 e0       	ldi	r22, 0x00	; 0
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	80 e0       	ldi	r24, 0x00	; 0
  14:	90 e0       	ldi	r25, 0x00	; 0
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard4playEv>
  1a:	68 81       	ld	r22, Y
  1c:	80 e0       	ldi	r24, 0x00	; 0
  1e:	90 e0       	ldi	r25, 0x00	; 0
	Serial.print("readFile:");
  20:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard4playEv>
  24:	81 11       	cpse	r24, r1
  26:	00 c0       	rjmp	.+0      	; 0x28 <_ZN6SdCard4playEv+0x28>
  28:	60 e0       	ldi	r22, 0x00	; 0
  2a:	70 e0       	ldi	r23, 0x00	; 0
	Serial.println(fileName);
  2c:	80 e0       	ldi	r24, 0x00	; 0
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	df 91       	pop	r29
  32:	cf 91       	pop	r28
  34:	0c 94 00 00 	jmp	0	; 0x0 <_ZN6SdCard4playEv>
	myFile = SD.open(fileName);
  38:	df 91       	pop	r29
  3a:	cf 91       	pop	r28
  3c:	08 95       	ret

Disassembly of section .text._ZN4FileaSERKS_:

00000000 <_ZN4FileaSERKS_>:
	if (!SD.begin(chipSelect)) {
		Serial.println("initialization failed!");
		return;
	}
}
void SdCard::readFile(char* fileName) {
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	fb 01       	movw	r30, r22
   6:	22 81       	ldd	r18, Z+2	; 0x02
   8:	33 81       	ldd	r19, Z+3	; 0x03
   a:	dc 01       	movw	r26, r24
   c:	13 96       	adiw	r26, 0x03	; 3
   e:	3c 93       	st	X, r19
  10:	2e 93       	st	-X, r18
  12:	12 97       	sbiw	r26, 0x02	; 2
  14:	44 81       	ldd	r20, Z+4	; 0x04
  16:	55 81       	ldd	r21, Z+5	; 0x05
  18:	66 81       	ldd	r22, Z+6	; 0x06
  1a:	77 81       	ldd	r23, Z+7	; 0x07
  1c:	14 96       	adiw	r26, 0x04	; 4
  1e:	4d 93       	st	X+, r20
	Serial.print("readFile:");
  20:	5d 93       	st	X+, r21
  22:	6d 93       	st	X+, r22
  24:	7c 93       	st	X, r23
  26:	17 97       	sbiw	r26, 0x07	; 7
  28:	40 85       	ldd	r20, Z+8	; 0x08
  2a:	51 85       	ldd	r21, Z+9	; 0x09
	Serial.println(fileName);
  2c:	62 85       	ldd	r22, Z+10	; 0x0a
  2e:	73 85       	ldd	r23, Z+11	; 0x0b
  30:	18 96       	adiw	r26, 0x08	; 8
  32:	4d 93       	st	X+, r20
  34:	5d 93       	st	X+, r21
	myFile = SD.open(fileName);
  36:	6d 93       	st	X+, r22
  38:	7c 93       	st	X, r23
  3a:	1b 97       	sbiw	r26, 0x0b	; 11
  3c:	1c 96       	adiw	r26, 0x0c	; 12
  3e:	ef 01       	movw	r28, r30
  40:	2c 96       	adiw	r28, 0x0c	; 12
  42:	9c 01       	movw	r18, r24
  44:	27 5e       	subi	r18, 0xE7	; 231
  46:	3f 4f       	sbci	r19, 0xFF	; 255
  48:	49 91       	ld	r20, Y+
  4a:	4d 93       	st	X+, r20
  4c:	a2 17       	cp	r26, r18
  4e:	b3 07       	cpc	r27, r19
  50:	01 f4       	brne	.+0      	; 0x52 <_ZN4FileaSERKS_+0x52>
  52:	21 8d       	ldd	r18, Z+25	; 0x19
  54:	32 8d       	ldd	r19, Z+26	; 0x1a
	if (myFile) {
  56:	fc 01       	movw	r30, r24
  58:	32 8f       	std	Z+26, r19	; 0x1a
  5a:	21 8f       	std	Z+25, r18	; 0x19
  5c:	df 91       	pop	r29
  5e:	cf 91       	pop	r28
		Serial.println(fileName);
  60:	08 95       	ret

Disassembly of section .text._ZN6SdCard9writeFileEPcS0_:

00000000 <_ZN6SdCard9writeFileEPcS0_>:
	if (!SD.begin(chipSelect)) {
		Serial.println("initialization failed!");
		return;
	}
}
void SdCard::readFile(char* fileName) {
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	6b 97       	sbiw	r28, 0x1b	; 27
  16:	0f b6       	in	r0, 0x3f	; 63
  18:	f8 94       	cli
  1a:	de bf       	out	0x3e, r29	; 62
  1c:	0f be       	out	0x3f, r0	; 63
  1e:	cd bf       	out	0x3d, r28	; 61
	Serial.print("readFile:");
  20:	8c 01       	movw	r16, r24
  22:	7b 01       	movw	r14, r22
  24:	6a 01       	movw	r12, r20
  26:	60 e0       	ldi	r22, 0x00	; 0
  28:	70 e0       	ldi	r23, 0x00	; 0
  2a:	80 e0       	ldi	r24, 0x00	; 0
	Serial.println(fileName);
  2c:	90 e0       	ldi	r25, 0x00	; 0
  2e:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  32:	b7 01       	movw	r22, r14
  34:	80 e0       	ldi	r24, 0x00	; 0
	myFile = SD.open(fileName);
  36:	90 e0       	ldi	r25, 0x00	; 0
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  3c:	23 e1       	ldi	r18, 0x13	; 19
  3e:	a7 01       	movw	r20, r14
  40:	60 e0       	ldi	r22, 0x00	; 0
  42:	70 e0       	ldi	r23, 0x00	; 0
  44:	ce 01       	movw	r24, r28
  46:	01 96       	adiw	r24, 0x01	; 1
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  4c:	0e 5f       	subi	r16, 0xFE	; 254
  4e:	1f 4f       	sbci	r17, 0xFF	; 255
  50:	be 01       	movw	r22, r28
  52:	6f 5f       	subi	r22, 0xFF	; 255
  54:	7f 4f       	sbci	r23, 0xFF	; 255
	if (myFile) {
  56:	c8 01       	movw	r24, r16
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  5c:	c8 01       	movw	r24, r16
  5e:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
		Serial.println(fileName);
  62:	88 23       	and	r24, r24
  64:	01 f0       	breq	.+0      	; 0x66 <_ZN6SdCard9writeFileEPcS0_+0x66>
  66:	60 e0       	ldi	r22, 0x00	; 0
  68:	70 e0       	ldi	r23, 0x00	; 0
		while (myFile.available()) {
  6a:	80 e0       	ldi	r24, 0x00	; 0
  6c:	90 e0       	ldi	r25, 0x00	; 0
  6e:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  72:	b7 01       	movw	r22, r14
			Serial.write(myFile.read());
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  7c:	60 e0       	ldi	r22, 0x00	; 0
  7e:	70 e0       	ldi	r23, 0x00	; 0
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
		}
		myFile.close();
  88:	b6 01       	movw	r22, r12
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
	} else {
		Serial.print("error opening to read ");
  8e:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  92:	b6 01       	movw	r22, r12
  94:	c8 01       	movw	r24, r16
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
		Serial.println(fileName);
  9a:	c8 01       	movw	r24, r16
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  a0:	60 e0       	ldi	r22, 0x00	; 0
  a2:	70 e0       	ldi	r23, 0x00	; 0
	}
}
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <_ZN6SdCard9writeFileEPcS0_+0xa6>
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	70 e0       	ldi	r23, 0x00	; 0
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  b2:	b7 01       	movw	r22, r14
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard9writeFileEPcS0_>
  bc:	6b 96       	adiw	r28, 0x1b	; 27
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	f8 94       	cli
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	cd bf       	out	0x3d, r28	; 61
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	1f 91       	pop	r17
  ce:	0f 91       	pop	r16
  d0:	ff 90       	pop	r15
  d2:	ef 90       	pop	r14
  d4:	df 90       	pop	r13
  d6:	cf 90       	pop	r12
  d8:	08 95       	ret

Disassembly of section .text._ZN6SdCard8readFileEPc:

00000000 <_ZN6SdCard8readFileEPc>:
	if (!SD.begin(chipSelect)) {
		Serial.println("initialization failed!");
		return;
	}
}
void SdCard::readFile(char* fileName) {
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	6b 97       	sbiw	r28, 0x1b	; 27
  12:	0f b6       	in	r0, 0x3f	; 63
  14:	f8 94       	cli
  16:	de bf       	out	0x3e, r29	; 62
  18:	0f be       	out	0x3f, r0	; 63
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	8c 01       	movw	r16, r24
  1e:	7b 01       	movw	r14, r22
	Serial.print("readFile:");
  20:	60 e0       	ldi	r22, 0x00	; 0
  22:	70 e0       	ldi	r23, 0x00	; 0
  24:	80 e0       	ldi	r24, 0x00	; 0
  26:	90 e0       	ldi	r25, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
	Serial.println(fileName);
  2c:	b7 01       	movw	r22, r14
  2e:	80 e0       	ldi	r24, 0x00	; 0
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
	myFile = SD.open(fileName);
  36:	21 e0       	ldi	r18, 0x01	; 1
  38:	a7 01       	movw	r20, r14
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	ce 01       	movw	r24, r28
  40:	01 96       	adiw	r24, 0x01	; 1
  42:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
  46:	0e 5f       	subi	r16, 0xFE	; 254
  48:	1f 4f       	sbci	r17, 0xFF	; 255
  4a:	be 01       	movw	r22, r28
  4c:	6f 5f       	subi	r22, 0xFF	; 255
  4e:	7f 4f       	sbci	r23, 0xFF	; 255
  50:	c8 01       	movw	r24, r16
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
	if (myFile) {
  56:	c8 01       	movw	r24, r16
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
  5c:	88 23       	and	r24, r24
  5e:	01 f0       	breq	.+0      	; 0x60 <_ZN6SdCard8readFileEPc+0x60>
		Serial.println(fileName);
  60:	b7 01       	movw	r22, r14
  62:	80 e0       	ldi	r24, 0x00	; 0
  64:	90 e0       	ldi	r25, 0x00	; 0
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
		while (myFile.available()) {
  6a:	c8 01       	movw	r24, r16
  6c:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
  70:	89 2b       	or	r24, r25
  72:	01 f0       	breq	.+0      	; 0x74 <_ZN6SdCard8readFileEPc+0x74>
			Serial.write(myFile.read());
  74:	c8 01       	movw	r24, r16
  76:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
  7a:	68 2f       	mov	r22, r24
  7c:	80 e0       	ldi	r24, 0x00	; 0
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
  84:	00 c0       	rjmp	.+0      	; 0x86 <_ZN6SdCard8readFileEPc+0x86>
		}
		myFile.close();
  86:	c8 01       	movw	r24, r16
  88:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <_ZN6SdCard8readFileEPc+0x8e>
	} else {
		Serial.print("error opening to read ");
  8e:	60 e0       	ldi	r22, 0x00	; 0
  90:	70 e0       	ldi	r23, 0x00	; 0
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
		Serial.println(fileName);
  9a:	b7 01       	movw	r22, r14
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	0e 94 00 00 	call	0	; 0x0 <_ZN6SdCard8readFileEPc>
	}
}
  a4:	6b 96       	adiw	r28, 0x1b	; 27
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	f8 94       	cli
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	cd bf       	out	0x3d, r28	; 61
  b0:	df 91       	pop	r29
  b2:	cf 91       	pop	r28
  b4:	1f 91       	pop	r17
  b6:	0f 91       	pop	r16
  b8:	ff 90       	pop	r15
  ba:	ef 90       	pop	r14
  bc:	08 95       	ret

Sim900aHTTP.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .group        00000008  00000000  00000000  00000034  2**2
                  CONTENTS, READONLY, EXCLUDE, GROUP, LINK_ONCE_DISCARD
  1 .text         00000000  00000000  00000000  0000003c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .data         00000000  00000000  00000000  0000003c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000000  00000000  00000000  0000003c  2**0
                  ALLOC
  4 .stab         00001434  00000000  00000000  0000003c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .stabstr      00001adf  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .rodata.str1.1 0000026f  00000000  00000000  00002f4f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text._ZN7Sim900a7poweronEv 0000001c  00000000  00000000  000031be  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN7Sim900a16readFromMySerialElPc 0000014e  00000000  00000000  000031da  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN7Sim900a20sendATcommandTimeoutEPcS0_lb 000000ec  00000000  00000000  00003328  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN7Sim900a7prepareEv 00000178  00000000  00000000  00003414  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN7Sim900a11prepareHttpEv 000000ae  00000000  00000000  0000358c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN7Sim900a9reconnectEPci 0000010e  00000000  00000000  0000363a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN7Sim900a14readFromServerElPc 0000004c  00000000  00000000  00003748  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN7Sim900a3tcpEPc 00000060  00000000  00000000  00003794  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text._ZN7Sim900a11runHttpParaEP9HttpParam 000001d6  00000000  00000000  000037f4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text._ZN7Sim900a11runHttpDataEP9HttpParam 00000156  00000000  00000000  000039ca  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text._ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam 000000b6  00000000  00000000  00003b20  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text._ZN7Sim900a7httpGetEP9HttpParam 00000032  00000000  00000000  00003bd6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text._ZN7Sim900a8httpPostEP9HttpParam 00000032  00000000  00000000  00003c08  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text._ZN7Sim900a8sendCodeEPc 00000028  00000000  00000000  00003c3a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text._ZN7Sim900a10sendCodelnEPc 00000028  00000000  00000000  00003c62  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .text._ZN7Sim900a10sendCodelnEi 00000030  00000000  00000000  00003c8a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .text._ZN7Sim900a8sendCodeEi 00000030  00000000  00000000  00003cba  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 24 .text._ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam 0000014e  00000000  00000000  00003cea  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 25 .comment      00000012  00000000  00000000  00003e38  2**0
                  CONTENTS, READONLY

Disassembly of section .text._ZN7Sim900a7poweronEv:

00000000 <_ZN7Sim900a7poweronEv>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	60 e0       	ldi	r22, 0x00	; 0
   2:	70 e0       	ldi	r23, 0x00	; 0
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7poweronEv>
   c:	61 e0       	ldi	r22, 0x01	; 1
   e:	82 e0       	ldi	r24, 0x02	; 2
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7poweronEv>
  14:	61 e0       	ldi	r22, 0x01	; 1
  16:	82 e0       	ldi	r24, 0x02	; 2
  18:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a7poweronEv>

Disassembly of section .text._ZN7Sim900a16readFromMySerialElPc:

00000000 <_ZN7Sim900a16readFromMySerialElPc>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	0f 93       	push	r16
  1a:	1f 93       	push	r17
  1c:	cf 93       	push	r28
	reconnect(param->host, param->port);
  1e:	df 93       	push	r29
  20:	ec 01       	movw	r28, r24
  22:	2a 01       	movw	r4, r20
  24:	3b 01       	movw	r6, r22
  26:	49 01       	movw	r8, r18
  28:	5c 01       	movw	r10, r24
  2a:	28 e1       	ldi	r18, 0x18	; 24
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	a2 0e       	add	r10, r18
  2e:	b1 1c       	adc	r11, r1
  30:	44 e6       	ldi	r20, 0x64	; 100
  32:	50 e0       	ldi	r21, 0x00	; 0
  34:	6f ef       	ldi	r22, 0xFF	; 255
  36:	70 e0       	ldi	r23, 0x00	; 0
  38:	c5 01       	movw	r24, r10
  3a:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  3e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  42:	68 87       	std	Y+8, r22	; 0x08
	sendCode(method);
  44:	79 87       	std	Y+9, r23	; 0x09
  46:	8a 87       	std	Y+10, r24	; 0x0a
  48:	9b 87       	std	Y+11, r25	; 0x0b
  4a:	60 e0       	ldi	r22, 0x00	; 0
	sendCode(" ");
  4c:	70 e0       	ldi	r23, 0x00	; 0
  4e:	80 e0       	ldi	r24, 0x00	; 0
  50:	90 e0       	ldi	r25, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
	sendCode(param->url);
  56:	c1 2c       	mov	r12, r1
  58:	d1 2c       	mov	r13, r1
  5a:	76 01       	movw	r14, r12
  5c:	00 e0       	ldi	r16, 0x00	; 0
  5e:	10 e0       	ldi	r17, 0x00	; 0
  60:	c4 14       	cp	r12, r4
	sendCodeln(HTTP_VERSION);
  62:	d5 04       	cpc	r13, r5
  64:	e6 04       	cpc	r14, r6
  66:	f7 04       	cpc	r15, r7
  68:	04 f0       	brlt	.+0      	; 0x6a <_ZN7Sim900a16readFromMySerialElPc+0x6a>
  6a:	00 c0       	rjmp	.+0      	; 0x6c <_ZN7Sim900a16readFromMySerialElPc+0x6c>
	sendCode("HOST: ");
  6c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  70:	c8 84       	ldd	r12, Y+8	; 0x08
  72:	d9 84       	ldd	r13, Y+9	; 0x09
  74:	ea 84       	ldd	r14, Y+10	; 0x0a
	sendCodeln(param->host);
  76:	fb 84       	ldd	r15, Y+11	; 0x0b
  78:	9b 01       	movw	r18, r22
  7a:	ac 01       	movw	r20, r24
  7c:	2c 19       	sub	r18, r12
  7e:	3d 09       	sbc	r19, r13
  80:	4e 09       	sbc	r20, r14
	sendCode("Content-Type:");
  82:	5f 09       	sbc	r21, r15
  84:	69 01       	movw	r12, r18
  86:	7a 01       	movw	r14, r20
  88:	04 36       	cpi	r16, 0x64	; 100
  8a:	11 05       	cpc	r17, r1
	sendCodeln(HTTP_CONTENTYPE);
  8c:	04 f0       	brlt	.+0      	; 0x8e <_ZN7Sim900a16readFromMySerialElPc+0x8e>
  8e:	60 e0       	ldi	r22, 0x00	; 0
  90:	70 e0       	ldi	r23, 0x00	; 0
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
	sendCode("Content-Length: ");
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <_ZN7Sim900a16readFromMySerialElPc+0x9c>
  9c:	88 81       	ld	r24, Y
  9e:	99 81       	ldd	r25, Y+1	; 0x01
	sendCode(param->length);
  a0:	dc 01       	movw	r26, r24
  a2:	ed 91       	ld	r30, X+
  a4:	fc 91       	ld	r31, X
  a6:	06 80       	ldd	r0, Z+6	; 0x06
  a8:	f7 81       	ldd	r31, Z+7	; 0x07
  aa:	e0 2d       	mov	r30, r0
	sendCodeln(HTTP_NEW_LINE);
  ac:	19 95       	eicall
  ae:	8f 3f       	cpi	r24, 0xFF	; 255
  b0:	bf ef       	ldi	r27, 0xFF	; 255
  b2:	9b 07       	cpc	r25, r27
  b4:	01 f4       	brne	.+0      	; 0xb6 <_ZN7Sim900a16readFromMySerialElPc+0xb6>
	sendCode(code);
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
	sendCode(SEND_FLAG);
  be:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  c2:	62 e0       	ldi	r22, 0x02	; 2
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
	sendCodeln(HTTP_NEW_LINE);
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <_ZN7Sim900a16readFromMySerialElPc+0xd0>
  d0:	fe 01       	movw	r30, r28
	readFromServer(10000, "scp");
  d2:	e0 0f       	add	r30, r16
  d4:	f1 1f       	adc	r31, r17
  d6:	80 8f       	std	Z+24, r24	; 0x18
  d8:	68 2f       	mov	r22, r24
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
  e2:	0f 5f       	subi	r16, 0xFF	; 255
	Serial.println();
  e4:	1f 4f       	sbci	r17, 0xFF	; 255
  e6:	b4 01       	movw	r22, r8
  e8:	c5 01       	movw	r24, r10
  ea:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
	delay(1000);
  ee:	89 2b       	or	r24, r25
  f0:	01 f4       	brne	.+0      	; 0xf2 <_ZN7Sim900a16readFromMySerialElPc+0xf2>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <_ZN7Sim900a16readFromMySerialElPc+0xf4>
  f4:	60 e0       	ldi	r22, 0x00	; 0
  f6:	70 e0       	ldi	r23, 0x00	; 0
	char* _command;
	command.toCharArray(_command, command.length());
	sendATcommandTimeout(_command, "CONNECT OK", 15000, true);
}
void Sim900a::close_connect() {
	Serial.println("close_connect >>>");
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
 100:	c1 e0       	ldi	r28, 0x01	; 1
 102:	00 c0       	rjmp	.+0      	; 0x104 <_ZN7Sim900a16readFromMySerialElPc+0x104>
	sendATcommandTimeout("AT+CIPCLOSE", "CLOSE OK", 15000, false);
 104:	60 e0       	ldi	r22, 0x00	; 0
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
 110:	2a e0       	ldi	r18, 0x0A	; 10
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	b7 01       	movw	r22, r14
 116:	a6 01       	movw	r20, r12
 118:	80 e0       	ldi	r24, 0x00	; 0
	Serial.println("close_connect >>>");
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
 120:	c0 e0       	ldi	r28, 0x00	; 0
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	90 e0       	ldi	r25, 0x00	; 0
	sendCodeln(HTTP_NEW_LINE);
	readFromServer(10000, "scp");
	Serial.println();
	delay(1000);
	close_connect();
	Serial.println("request >>>");
 126:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a16readFromMySerialElPc>
 12a:	8c 2f       	mov	r24, r28
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	1f 91       	pop	r17
	return serialResponse;
}
 132:	0f 91       	pop	r16
 134:	ff 90       	pop	r15
 136:	ef 90       	pop	r14
 138:	df 90       	pop	r13
 13a:	cf 90       	pop	r12
 13c:	bf 90       	pop	r11
 13e:	af 90       	pop	r10
 140:	9f 90       	pop	r9
 142:	8f 90       	pop	r8
 144:	7f 90       	pop	r7
 146:	6f 90       	pop	r6
 148:	5f 90       	pop	r5
 14a:	4f 90       	pop	r4
 14c:	08 95       	ret

Disassembly of section .text._ZN7Sim900a20sendATcommandTimeoutEPcS0_lb:

00000000 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	af 92       	push	r10
   a:	bf 92       	push	r11
   c:	cf 92       	push	r12
   e:	df 92       	push	r13
  10:	ef 92       	push	r14
  12:	0f 93       	push	r16
  14:	1f 93       	push	r17
  16:	cf 93       	push	r28
  18:	df 93       	push	r29
  1a:	ec 01       	movw	r28, r24
  1c:	6b 01       	movw	r12, r22
	reconnect(param->host, param->port);
  1e:	5a 01       	movw	r10, r20
  20:	28 01       	movw	r4, r16
  22:	39 01       	movw	r6, r18
  24:	88 81       	ld	r24, Y
  26:	99 81       	ldd	r25, Y+1	; 0x01
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	88 81       	ld	r24, Y
  2e:	99 81       	ldd	r25, Y+1	; 0x01
  30:	dc 01       	movw	r26, r24
  32:	ed 91       	ld	r30, X+
  34:	fc 91       	ld	r31, X
  36:	02 84       	ldd	r0, Z+10	; 0x0a
  38:	f3 85       	ldd	r31, Z+11	; 0x0b
  3a:	e0 2d       	mov	r30, r0
  3c:	19 95       	eicall
  3e:	60 e0       	ldi	r22, 0x00	; 0
  40:	70 e0       	ldi	r23, 0x00	; 0
  42:	80 e0       	ldi	r24, 0x00	; 0
	sendCode(method);
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  4a:	b6 01       	movw	r22, r12
	sendCode(" ");
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  54:	80 e0       	ldi	r24, 0x00	; 0
	sendCode(param->url);
  56:	90 e0       	ldi	r25, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  5c:	95 01       	movw	r18, r10
  5e:	b3 01       	movw	r22, r6
  60:	a2 01       	movw	r20, r4
	sendCodeln(HTTP_VERSION);
  62:	ce 01       	movw	r24, r28
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  68:	18 2f       	mov	r17, r24
  6a:	80 e0       	ldi	r24, 0x00	; 0
	sendCode("HOST: ");
  6c:	90 e0       	ldi	r25, 0x00	; 0
  6e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  72:	11 11       	cpse	r17, r1
  74:	00 c0       	rjmp	.+0      	; 0x76 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb+0x76>
	sendCodeln(param->host);
  76:	ee 20       	and	r14, r14
  78:	01 f0       	breq	.+0      	; 0x7a <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb+0x7a>
  7a:	60 ed       	ldi	r22, 0xD0	; 208
  7c:	77 e0       	ldi	r23, 0x07	; 7
  7e:	80 e0       	ldi	r24, 0x00	; 0
  80:	90 e0       	ldi	r25, 0x00	; 0
	sendCode("Content-Type:");
  82:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	70 e0       	ldi	r23, 0x00	; 0
  8a:	80 e0       	ldi	r24, 0x00	; 0
	sendCodeln(HTTP_CONTENTYPE);
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  92:	b6 01       	movw	r22, r12
  94:	80 e0       	ldi	r24, 0x00	; 0
	sendCode("Content-Length: ");
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  9c:	ee 24       	eor	r14, r14
  9e:	e3 94       	inc	r14
	sendCode(param->length);
  a0:	93 01       	movw	r18, r6
  a2:	82 01       	movw	r16, r4
  a4:	a5 01       	movw	r20, r10
  a6:	b6 01       	movw	r22, r12
  a8:	ce 01       	movw	r24, r28
  aa:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
	sendCodeln(HTTP_NEW_LINE);
  ae:	80 e0       	ldi	r24, 0x00	; 0
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	df 91       	pop	r29
  b4:	cf 91       	pop	r28
	sendCode(code);
  b6:	1f 91       	pop	r17
  b8:	0f 91       	pop	r16
  ba:	ef 90       	pop	r14
  bc:	df 90       	pop	r13
	sendCode(SEND_FLAG);
  be:	cf 90       	pop	r12
  c0:	bf 90       	pop	r11
  c2:	af 90       	pop	r10
  c4:	7f 90       	pop	r7
  c6:	6f 90       	pop	r6
	sendCodeln(HTTP_NEW_LINE);
  c8:	5f 90       	pop	r5
  ca:	4f 90       	pop	r4
  cc:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a20sendATcommandTimeoutEPcS0_lb>
  d0:	df 91       	pop	r29
	readFromServer(10000, "scp");
  d2:	cf 91       	pop	r28
  d4:	1f 91       	pop	r17
  d6:	0f 91       	pop	r16
  d8:	ef 90       	pop	r14
  da:	df 90       	pop	r13
  dc:	cf 90       	pop	r12
  de:	bf 90       	pop	r11
  e0:	af 90       	pop	r10
  e2:	7f 90       	pop	r7
	Serial.println();
  e4:	6f 90       	pop	r6
  e6:	5f 90       	pop	r5
  e8:	4f 90       	pop	r4
  ea:	08 95       	ret

Disassembly of section .text._ZN7Sim900a7prepareEv:

00000000 <_ZN7Sim900a7prepareEv>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
  10:	60 e0       	ldi	r22, 0x00	; 0
  12:	70 e0       	ldi	r23, 0x00	; 0
  14:	80 e0       	ldi	r24, 0x00	; 0
  16:	90 e0       	ldi	r25, 0x00	; 0
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  1c:	4a 81       	ldd	r20, Y+2	; 0x02
	reconnect(param->host, param->port);
  1e:	5b 81       	ldd	r21, Y+3	; 0x03
  20:	6c 81       	ldd	r22, Y+4	; 0x04
  22:	7d 81       	ldd	r23, Y+5	; 0x05
  24:	26 e0       	ldi	r18, 0x06	; 6
  26:	88 81       	ld	r24, Y
  28:	99 81       	ldd	r25, Y+1	; 0x01
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2e:	ce 01       	movw	r24, r28
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  34:	64 ef       	ldi	r22, 0xF4	; 244
  36:	71 e0       	ldi	r23, 0x01	; 1
  38:	80 e0       	ldi	r24, 0x00	; 0
  3a:	90 e0       	ldi	r25, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  40:	6e 01       	movw	r12, r28
  42:	8c e7       	ldi	r24, 0x7C	; 124
	sendCode(method);
  44:	c8 0e       	add	r12, r24
  46:	d1 1c       	adc	r13, r1
  48:	f6 01       	movw	r30, r12
  4a:	40 81       	ld	r20, Z
	sendCode(" ");
  4c:	51 81       	ldd	r21, Z+1	; 0x01
  4e:	ee 24       	eor	r14, r14
  50:	e3 94       	inc	r14
  52:	08 eb       	ldi	r16, 0xB8	; 184
  54:	1b e0       	ldi	r17, 0x0B	; 11
	sendCode(param->url);
  56:	20 e0       	ldi	r18, 0x00	; 0
  58:	30 e0       	ldi	r19, 0x00	; 0
  5a:	60 e0       	ldi	r22, 0x00	; 0
  5c:	70 e0       	ldi	r23, 0x00	; 0
  5e:	ce 01       	movw	r24, r28
  60:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
	sendCodeln(HTTP_VERSION);
  64:	60 ed       	ldi	r22, 0xD0	; 208
  66:	77 e0       	ldi	r23, 0x07	; 7
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 e0       	ldi	r25, 0x00	; 0
	sendCode("HOST: ");
  6c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  70:	f6 01       	movw	r30, r12
  72:	40 81       	ld	r20, Z
  74:	51 81       	ldd	r21, Z+1	; 0x01
	sendCodeln(param->host);
  76:	08 eb       	ldi	r16, 0xB8	; 184
  78:	1b e0       	ldi	r17, 0x0B	; 11
  7a:	20 e0       	ldi	r18, 0x00	; 0
  7c:	30 e0       	ldi	r19, 0x00	; 0
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	70 e0       	ldi	r23, 0x00	; 0
	sendCode("Content-Type:");
  82:	ce 01       	movw	r24, r28
  84:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  88:	60 ed       	ldi	r22, 0xD0	; 208
  8a:	77 e0       	ldi	r23, 0x07	; 7
	sendCodeln(HTTP_CONTENTYPE);
  8c:	80 e0       	ldi	r24, 0x00	; 0
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  94:	f6 01       	movw	r30, r12
	sendCode("Content-Length: ");
  96:	40 81       	ld	r20, Z
  98:	51 81       	ldd	r21, Z+1	; 0x01
  9a:	08 e9       	ldi	r16, 0x98	; 152
  9c:	1a e3       	ldi	r17, 0x3A	; 58
  9e:	20 e0       	ldi	r18, 0x00	; 0
	sendCode(param->length);
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	60 e0       	ldi	r22, 0x00	; 0
  a4:	70 e0       	ldi	r23, 0x00	; 0
  a6:	ce 01       	movw	r24, r28
  a8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
	sendCodeln(HTTP_NEW_LINE);
  ac:	60 ed       	ldi	r22, 0xD0	; 208
  ae:	77 e0       	ldi	r23, 0x07	; 7
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
	sendCode(code);
  b8:	f6 01       	movw	r30, r12
  ba:	40 81       	ld	r20, Z
  bc:	51 81       	ldd	r21, Z+1	; 0x01
	sendCode(SEND_FLAG);
  be:	08 e9       	ldi	r16, 0x98	; 152
  c0:	1a e3       	ldi	r17, 0x3A	; 58
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	60 e0       	ldi	r22, 0x00	; 0
	sendCodeln(HTTP_NEW_LINE);
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	ce 01       	movw	r24, r28
  cc:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  d0:	68 eb       	ldi	r22, 0xB8	; 184
	readFromServer(10000, "scp");
  d2:	7b e0       	ldi	r23, 0x0B	; 11
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  dc:	f6 01       	movw	r30, r12
  de:	40 81       	ld	r20, Z
  e0:	51 81       	ldd	r21, Z+1	; 0x01
  e2:	08 e9       	ldi	r16, 0x98	; 152
	Serial.println();
  e4:	1a e3       	ldi	r17, 0x3A	; 58
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	60 e0       	ldi	r22, 0x00	; 0
	delay(1000);
  ec:	70 e0       	ldi	r23, 0x00	; 0
  ee:	ce 01       	movw	r24, r28
  f0:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
  f4:	60 ed       	ldi	r22, 0xD0	; 208
  f6:	77 e0       	ldi	r23, 0x07	; 7
	char* _command;
	command.toCharArray(_command, command.length());
	sendATcommandTimeout(_command, "CONNECT OK", 15000, true);
}
void Sim900a::close_connect() {
	Serial.println("close_connect >>>");
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
 100:	f6 01       	movw	r30, r12
 102:	40 81       	ld	r20, Z
	sendATcommandTimeout("AT+CIPCLOSE", "CLOSE OK", 15000, false);
 104:	51 81       	ldd	r21, Z+1	; 0x01
 106:	08 e9       	ldi	r16, 0x98	; 152
 108:	1a e3       	ldi	r17, 0x3A	; 58
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	60 e0       	ldi	r22, 0x00	; 0
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	ce 01       	movw	r24, r28
 114:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
 118:	60 ed       	ldi	r22, 0xD0	; 208
	Serial.println("close_connect >>>");
 11a:	77 e0       	ldi	r23, 0x07	; 7
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
 124:	f6 01       	movw	r30, r12
	sendCodeln(HTTP_NEW_LINE);
	readFromServer(10000, "scp");
	Serial.println();
	delay(1000);
	close_connect();
	Serial.println("request >>>");
 126:	40 81       	ld	r20, Z
 128:	51 81       	ldd	r21, Z+1	; 0x01
 12a:	08 ea       	ldi	r16, 0xA8	; 168
 12c:	11 e6       	ldi	r17, 0x61	; 97
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
	return serialResponse;
}
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	70 e0       	ldi	r23, 0x00	; 0
 136:	ce 01       	movw	r24, r28
 138:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
 13c:	60 ed       	ldi	r22, 0xD0	; 208
 13e:	77 e0       	ldi	r23, 0x07	; 7
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
 148:	08 e9       	ldi	r16, 0x98	; 152
 14a:	1a e3       	ldi	r17, 0x3A	; 58
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 e0       	ldi	r20, 0x00	; 0
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	60 e0       	ldi	r22, 0x00	; 0
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	ce 01       	movw	r24, r28
 15a:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7prepareEv>
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	1f 91       	pop	r17
 16c:	0f 91       	pop	r16
 16e:	ef 90       	pop	r14
 170:	df 90       	pop	r13
 172:	cf 90       	pop	r12
 174:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a7prepareEv>

Disassembly of section .text._ZN7Sim900a11prepareHttpEv:

00000000 <_ZN7Sim900a11prepareHttpEv>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
  14:	68 ee       	ldi	r22, 0xE8	; 232
  16:	73 e0       	ldi	r23, 0x03	; 3
  18:	80 e0       	ldi	r24, 0x00	; 0
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
	reconnect(param->host, param->port);
  20:	6e 01       	movw	r12, r28
  22:	8c e7       	ldi	r24, 0x7C	; 124
  24:	c8 0e       	add	r12, r24
  26:	d1 1c       	adc	r13, r1
  28:	f6 01       	movw	r30, r12
  2a:	40 81       	ld	r20, Z
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	51 81       	ldd	r21, Z+1	; 0x01
  2e:	ee 24       	eor	r14, r14
  30:	e3 94       	inc	r14
  32:	08 e9       	ldi	r16, 0x98	; 152
  34:	1a e3       	ldi	r17, 0x3A	; 58
  36:	20 e0       	ldi	r18, 0x00	; 0
  38:	30 e0       	ldi	r19, 0x00	; 0
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	ce 01       	movw	r24, r28
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
	sendCode(method);
  44:	68 ee       	ldi	r22, 0xE8	; 232
  46:	73 e0       	ldi	r23, 0x03	; 3
  48:	80 e0       	ldi	r24, 0x00	; 0
  4a:	90 e0       	ldi	r25, 0x00	; 0
	sendCode(" ");
  4c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
  50:	f6 01       	movw	r30, r12
  52:	40 81       	ld	r20, Z
  54:	51 81       	ldd	r21, Z+1	; 0x01
	sendCode(param->url);
  56:	08 e9       	ldi	r16, 0x98	; 152
  58:	1a e3       	ldi	r17, 0x3A	; 58
  5a:	20 e0       	ldi	r18, 0x00	; 0
  5c:	30 e0       	ldi	r19, 0x00	; 0
  5e:	60 e0       	ldi	r22, 0x00	; 0
  60:	70 e0       	ldi	r23, 0x00	; 0
	sendCodeln(HTTP_VERSION);
  62:	ce 01       	movw	r24, r28
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
  68:	f6 01       	movw	r30, r12
  6a:	40 81       	ld	r20, Z
	sendCode("HOST: ");
  6c:	51 81       	ldd	r21, Z+1	; 0x01
  6e:	e1 2c       	mov	r14, r1
  70:	08 ee       	ldi	r16, 0xE8	; 232
  72:	13 e0       	ldi	r17, 0x03	; 3
  74:	20 e0       	ldi	r18, 0x00	; 0
	sendCodeln(param->host);
  76:	30 e0       	ldi	r19, 0x00	; 0
  78:	60 e0       	ldi	r22, 0x00	; 0
  7a:	70 e0       	ldi	r23, 0x00	; 0
  7c:	ce 01       	movw	r24, r28
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
	sendCode("Content-Type:");
  82:	f6 01       	movw	r30, r12
  84:	40 81       	ld	r20, Z
  86:	51 81       	ldd	r21, Z+1	; 0x01
  88:	ee 24       	eor	r14, r14
  8a:	e3 94       	inc	r14
	sendCodeln(HTTP_CONTENTYPE);
  8c:	08 e9       	ldi	r16, 0x98	; 152
  8e:	1a e3       	ldi	r17, 0x3A	; 58
  90:	20 e0       	ldi	r18, 0x00	; 0
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	60 e0       	ldi	r22, 0x00	; 0
	sendCode("Content-Length: ");
  96:	70 e0       	ldi	r23, 0x00	; 0
  98:	ce 01       	movw	r24, r28
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11prepareHttpEv>
  9e:	df 91       	pop	r29
	sendCode(param->length);
  a0:	cf 91       	pop	r28
  a2:	1f 91       	pop	r17
  a4:	0f 91       	pop	r16
  a6:	ef 90       	pop	r14
  a8:	df 90       	pop	r13
  aa:	cf 90       	pop	r12
	sendCodeln(HTTP_NEW_LINE);
  ac:	08 95       	ret

Disassembly of section .text._ZN7Sim900a9reconnectEPci:

00000000 <_ZN7Sim900a9reconnectEPci>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	0f 93       	push	r16
   c:	1f 93       	push	r17
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	6e 97       	sbiw	r28, 0x1e	; 30
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	de bf       	out	0x3e, r29	; 62
	reconnect(param->host, param->port);
  1e:	0f be       	out	0x3f, r0	; 63
  20:	cd bf       	out	0x3d, r28	; 61
  22:	5c 01       	movw	r10, r24
  24:	8b 01       	movw	r16, r22
  26:	6a 01       	movw	r12, r20
  28:	60 e0       	ldi	r22, 0x00	; 0
  2a:	70 e0       	ldi	r23, 0x00	; 0
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	ce 01       	movw	r24, r28
  2e:	01 96       	adiw	r24, 0x01	; 1
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
  34:	a8 01       	movw	r20, r16
  36:	be 01       	movw	r22, r28
  38:	6f 5f       	subi	r22, 0xFF	; 255
  3a:	7f 4f       	sbci	r23, 0xFF	; 255
  3c:	ce 01       	movw	r24, r28
  3e:	49 96       	adiw	r24, 0x19	; 25
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCode(method);
  44:	ce 01       	movw	r24, r28
  46:	01 96       	adiw	r24, 0x01	; 1
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCode(" ");
  4c:	60 e0       	ldi	r22, 0x00	; 0
  4e:	70 e0       	ldi	r23, 0x00	; 0
  50:	ce 01       	movw	r24, r28
  52:	43 96       	adiw	r24, 0x13	; 19
  54:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCode(param->url);
  58:	a6 01       	movw	r20, r12
  5a:	be 01       	movw	r22, r28
  5c:	6d 5e       	subi	r22, 0xED	; 237
  5e:	7f 4f       	sbci	r23, 0xFF	; 255
  60:	ce 01       	movw	r24, r28
	sendCodeln(HTTP_VERSION);
  62:	0d 96       	adiw	r24, 0x0d	; 13
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
  68:	be 01       	movw	r22, r28
  6a:	67 5e       	subi	r22, 0xE7	; 231
	sendCode("HOST: ");
  6c:	7f 4f       	sbci	r23, 0xFF	; 255
  6e:	ce 01       	movw	r24, r28
  70:	07 96       	adiw	r24, 0x07	; 7
  72:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCodeln(param->host);
  76:	ae 01       	movw	r20, r28
  78:	43 5f       	subi	r20, 0xF3	; 243
  7a:	5f 4f       	sbci	r21, 0xFF	; 255
  7c:	be 01       	movw	r22, r28
  7e:	69 5f       	subi	r22, 0xF9	; 249
  80:	7f 4f       	sbci	r23, 0xFF	; 255
	sendCode("Content-Type:");
  82:	ce 01       	movw	r24, r28
  84:	01 96       	adiw	r24, 0x01	; 1
  86:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
  8a:	be 01       	movw	r22, r28
	sendCodeln(HTTP_CONTENTYPE);
  8c:	6f 5f       	subi	r22, 0xFF	; 255
  8e:	7f 4f       	sbci	r23, 0xFF	; 255
  90:	ce 01       	movw	r24, r28
  92:	49 96       	adiw	r24, 0x19	; 25
  94:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCode("Content-Length: ");
  98:	ce 01       	movw	r24, r28
  9a:	01 96       	adiw	r24, 0x01	; 1
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCode(param->length);
  a0:	ce 01       	movw	r24, r28
  a2:	07 96       	adiw	r24, 0x07	; 7
  a4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
  a8:	ce 01       	movw	r24, r28
  aa:	0d 96       	adiw	r24, 0x0d	; 13
	sendCodeln(HTTP_NEW_LINE);
  ac:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
  b0:	ce 01       	movw	r24, r28
  b2:	43 96       	adiw	r24, 0x13	; 19
  b4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	sendCode(code);
  b8:	4d 8d       	ldd	r20, Y+29	; 0x1d
  ba:	5e 8d       	ldd	r21, Y+30	; 0x1e
  bc:	20 e0       	ldi	r18, 0x00	; 0
	sendCode(SEND_FLAG);
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	c1 2c       	mov	r12, r1
  c2:	d1 2c       	mov	r13, r1
  c4:	b6 01       	movw	r22, r12
  c6:	ce 01       	movw	r24, r28
	sendCodeln(HTTP_NEW_LINE);
  c8:	49 96       	adiw	r24, 0x19	; 25
  ca:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
  ce:	ee 24       	eor	r14, r14
  d0:	e3 94       	inc	r14
	readFromServer(10000, "scp");
  d2:	08 e9       	ldi	r16, 0x98	; 152
  d4:	1a e3       	ldi	r17, 0x3A	; 58
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	40 e0       	ldi	r20, 0x00	; 0
  dc:	50 e0       	ldi	r21, 0x00	; 0
  de:	b6 01       	movw	r22, r12
  e0:	c5 01       	movw	r24, r10
  e2:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	Serial.println();
  e6:	ce 01       	movw	r24, r28
  e8:	49 96       	adiw	r24, 0x19	; 25
  ea:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a9reconnectEPci>
	delay(1000);
  ee:	6e 96       	adiw	r28, 0x1e	; 30
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	f8 94       	cli
  f4:	de bf       	out	0x3e, r29	; 62
  f6:	0f be       	out	0x3f, r0	; 63
	char* _command;
	command.toCharArray(_command, command.length());
	sendATcommandTimeout(_command, "CONNECT OK", 15000, true);
}
void Sim900a::close_connect() {
	Serial.println("close_connect >>>");
  f8:	cd bf       	out	0x3d, r28	; 61
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	1f 91       	pop	r17
 100:	0f 91       	pop	r16
 102:	ef 90       	pop	r14
	sendATcommandTimeout("AT+CIPCLOSE", "CLOSE OK", 15000, false);
 104:	df 90       	pop	r13
 106:	cf 90       	pop	r12
 108:	bf 90       	pop	r11
 10a:	af 90       	pop	r10
 10c:	08 95       	ret

Disassembly of section .text._ZN7Sim900a14readFromServerElPc:

00000000 <_ZN7Sim900a14readFromServerElPc>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	60 e0       	ldi	r22, 0x00	; 0
   8:	70 e0       	ldi	r23, 0x00	; 0
   a:	80 e0       	ldi	r24, 0x00	; 0
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a14readFromServerElPc>
  12:	88 81       	ld	r24, Y
  14:	99 81       	ldd	r25, Y+1	; 0x01
  16:	dc 01       	movw	r26, r24
  18:	ed 91       	ld	r30, X+
  1a:	fc 91       	ld	r31, X
  1c:	04 80       	ldd	r0, Z+4	; 0x04
	reconnect(param->host, param->port);
  1e:	f5 81       	ldd	r31, Z+5	; 0x05
  20:	e0 2d       	mov	r30, r0
  22:	19 95       	eicall
  24:	89 2b       	or	r24, r25
  26:	01 f0       	breq	.+0      	; 0x28 <_ZN7Sim900a14readFromServerElPc+0x28>
  28:	88 81       	ld	r24, Y
  2a:	99 81       	ldd	r25, Y+1	; 0x01
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	dc 01       	movw	r26, r24
  2e:	ed 91       	ld	r30, X+
  30:	fc 91       	ld	r31, X
  32:	06 80       	ldd	r0, Z+6	; 0x06
  34:	f7 81       	ldd	r31, Z+7	; 0x07
  36:	e0 2d       	mov	r30, r0
  38:	19 95       	eicall
  3a:	68 2f       	mov	r22, r24
  3c:	80 e0       	ldi	r24, 0x00	; 0
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a14readFromServerElPc>
	sendCode(method);
  44:	00 c0       	rjmp	.+0      	; 0x46 <_ZN7Sim900a14readFromServerElPc+0x46>
  46:	df 91       	pop	r29
  48:	cf 91       	pop	r28
  4a:	08 95       	ret

Disassembly of section .text._ZN7Sim900a3tcpEPc:

00000000 <_ZN7Sim900a3tcpEPc>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
  10:	6b 01       	movw	r12, r22
  12:	e1 2c       	mov	r14, r1
  14:	08 e9       	ldi	r16, 0x98	; 152
  16:	1a e3       	ldi	r17, 0x3A	; 58
  18:	20 e0       	ldi	r18, 0x00	; 0
  1a:	30 e0       	ldi	r19, 0x00	; 0
  1c:	40 e0       	ldi	r20, 0x00	; 0
	reconnect(param->host, param->port);
  1e:	50 e0       	ldi	r21, 0x00	; 0
  20:	60 e0       	ldi	r22, 0x00	; 0
  22:	70 e0       	ldi	r23, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a3tcpEPc>
  28:	b6 01       	movw	r22, r12
  2a:	88 81       	ld	r24, Y
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	99 81       	ldd	r25, Y+1	; 0x01
  2e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a3tcpEPc>
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	30 e0       	ldi	r19, 0x00	; 0
  36:	48 e9       	ldi	r20, 0x98	; 152
  38:	5a e3       	ldi	r21, 0x3A	; 58
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	ce 01       	movw	r24, r28
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a3tcpEPc>
	sendCode(method);
  44:	80 e0       	ldi	r24, 0x00	; 0
  46:	90 e0       	ldi	r25, 0x00	; 0
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a3tcpEPc>
	sendCode(" ");
  4c:	ce 01       	movw	r24, r28
  4e:	48 96       	adiw	r24, 0x18	; 24
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
	sendCode(param->url);
  56:	0f 91       	pop	r16
  58:	ef 90       	pop	r14
  5a:	df 90       	pop	r13
  5c:	cf 90       	pop	r12
  5e:	08 95       	ret

Disassembly of section .text._ZN7Sim900a11runHttpParaEP9HttpParam:

00000000 <_ZN7Sim900a11runHttpParaEP9HttpParam>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	0f 93       	push	r16
  10:	1f 93       	push	r17
  12:	cf 93       	push	r28
  14:	df 93       	push	r29
  16:	cd b7       	in	r28, 0x3d	; 61
  18:	de b7       	in	r29, 0x3e	; 62
  1a:	68 97       	sbiw	r28, 0x18	; 24
  1c:	0f b6       	in	r0, 0x3f	; 63
	reconnect(param->host, param->port);
  1e:	f8 94       	cli
  20:	de bf       	out	0x3e, r29	; 62
  22:	0f be       	out	0x3f, r0	; 63
  24:	cd bf       	out	0x3d, r28	; 61
  26:	5c 01       	movw	r10, r24
  28:	6b 01       	movw	r12, r22
  2a:	8d b6       	in	r8, 0x3d	; 61
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	9e b6       	in	r9, 0x3e	; 62
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	ce 01       	movw	r24, r28
  34:	43 96       	adiw	r24, 0x13	; 19
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  3a:	f6 01       	movw	r30, r12
  3c:	60 81       	ld	r22, Z
  3e:	71 81       	ldd	r23, Z+1	; 0x01
  40:	ce 01       	movw	r24, r28
  42:	07 96       	adiw	r24, 0x07	; 7
	sendCode(method);
  44:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  48:	be 01       	movw	r22, r28
  4a:	6d 5e       	subi	r22, 0xED	; 237
	sendCode(" ");
  4c:	7f 4f       	sbci	r23, 0xFF	; 255
  4e:	ce 01       	movw	r24, r28
  50:	0d 96       	adiw	r24, 0x0d	; 13
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
	sendCode(param->url);
  56:	ae 01       	movw	r20, r28
  58:	49 5f       	subi	r20, 0xF9	; 249
  5a:	5f 4f       	sbci	r21, 0xFF	; 255
  5c:	be 01       	movw	r22, r28
  5e:	63 5f       	subi	r22, 0xF3	; 243
  60:	7f 4f       	sbci	r23, 0xFF	; 255
	sendCodeln(HTTP_VERSION);
  62:	ce 01       	movw	r24, r28
  64:	01 96       	adiw	r24, 0x01	; 1
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  6a:	be 01       	movw	r22, r28
	sendCode("HOST: ");
  6c:	6f 5f       	subi	r22, 0xFF	; 255
  6e:	7f 4f       	sbci	r23, 0xFF	; 255
  70:	ce 01       	movw	r24, r28
  72:	43 96       	adiw	r24, 0x13	; 19
  74:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
	sendCodeln(param->host);
  78:	ce 01       	movw	r24, r28
  7a:	01 96       	adiw	r24, 0x01	; 1
  7c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  80:	ce 01       	movw	r24, r28
	sendCode("Content-Type:");
  82:	0d 96       	adiw	r24, 0x0d	; 13
  84:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  88:	ce 01       	movw	r24, r28
  8a:	07 96       	adiw	r24, 0x07	; 7
	sendCodeln(HTTP_CONTENTYPE);
  8c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  90:	f6 01       	movw	r30, r12
  92:	64 81       	ldd	r22, Z+4	; 0x04
  94:	75 81       	ldd	r23, Z+5	; 0x05
	sendCode("Content-Length: ");
  96:	ce 01       	movw	r24, r28
  98:	07 96       	adiw	r24, 0x07	; 7
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  9e:	be 01       	movw	r22, r28
	sendCode(param->length);
  a0:	6d 5e       	subi	r22, 0xED	; 237
  a2:	7f 4f       	sbci	r23, 0xFF	; 255
  a4:	ce 01       	movw	r24, r28
  a6:	0d 96       	adiw	r24, 0x0d	; 13
  a8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
	sendCodeln(HTTP_NEW_LINE);
  ac:	ae 01       	movw	r20, r28
  ae:	49 5f       	subi	r20, 0xF9	; 249
  b0:	5f 4f       	sbci	r21, 0xFF	; 255
  b2:	be 01       	movw	r22, r28
  b4:	63 5f       	subi	r22, 0xF3	; 243
	sendCode(code);
  b6:	7f 4f       	sbci	r23, 0xFF	; 255
  b8:	ce 01       	movw	r24, r28
  ba:	01 96       	adiw	r24, 0x01	; 1
  bc:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
	sendCode(SEND_FLAG);
  c0:	be 01       	movw	r22, r28
  c2:	6f 5f       	subi	r22, 0xFF	; 255
  c4:	7f 4f       	sbci	r23, 0xFF	; 255
  c6:	ce 01       	movw	r24, r28
	sendCodeln(HTTP_NEW_LINE);
  c8:	43 96       	adiw	r24, 0x13	; 19
  ca:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  ce:	ce 01       	movw	r24, r28
  d0:	01 96       	adiw	r24, 0x01	; 1
	readFromServer(10000, "scp");
  d2:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  d6:	ce 01       	movw	r24, r28
  d8:	0d 96       	adiw	r24, 0x0d	; 13
  da:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  de:	ce 01       	movw	r24, r28
  e0:	07 96       	adiw	r24, 0x07	; 7
  e2:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
	Serial.println();
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	70 e0       	ldi	r23, 0x00	; 0
  ea:	ce 01       	movw	r24, r28
	delay(1000);
  ec:	07 96       	adiw	r24, 0x07	; 7
  ee:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
  f2:	be 01       	movw	r22, r28
  f4:	6d 5e       	subi	r22, 0xED	; 237
  f6:	7f 4f       	sbci	r23, 0xFF	; 255
	char* _command;
	command.toCharArray(_command, command.length());
	sendATcommandTimeout(_command, "CONNECT OK", 15000, true);
}
void Sim900a::close_connect() {
	Serial.println("close_connect >>>");
  f8:	ce 01       	movw	r24, r28
  fa:	0d 96       	adiw	r24, 0x0d	; 13
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 100:	ae 01       	movw	r20, r28
 102:	49 5f       	subi	r20, 0xF9	; 249
	sendATcommandTimeout("AT+CIPCLOSE", "CLOSE OK", 15000, false);
 104:	5f 4f       	sbci	r21, 0xFF	; 255
 106:	be 01       	movw	r22, r28
 108:	63 5f       	subi	r22, 0xF3	; 243
 10a:	7f 4f       	sbci	r23, 0xFF	; 255
 10c:	ce 01       	movw	r24, r28
 10e:	01 96       	adiw	r24, 0x01	; 1
 110:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 114:	be 01       	movw	r22, r28
 116:	6f 5f       	subi	r22, 0xFF	; 255
 118:	7f 4f       	sbci	r23, 0xFF	; 255
	Serial.println("close_connect >>>");
 11a:	ce 01       	movw	r24, r28
 11c:	43 96       	adiw	r24, 0x13	; 19
 11e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 122:	ce 01       	movw	r24, r28
 124:	01 96       	adiw	r24, 0x01	; 1
	sendCodeln(HTTP_NEW_LINE);
	readFromServer(10000, "scp");
	Serial.println();
	delay(1000);
	close_connect();
	Serial.println("request >>>");
 126:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 12a:	ce 01       	movw	r24, r28
 12c:	0d 96       	adiw	r24, 0x0d	; 13
 12e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
	return serialResponse;
}
 132:	ce 01       	movw	r24, r28
 134:	07 96       	adiw	r24, 0x07	; 7
 136:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 13a:	8f 89       	ldd	r24, Y+23	; 0x17
 13c:	98 8d       	ldd	r25, Y+24	; 0x18
 13e:	2d b7       	in	r18, 0x3d	; 61
 140:	3e b7       	in	r19, 0x3e	; 62
 142:	28 1b       	sub	r18, r24
 144:	39 0b       	sbc	r19, r25
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	f8 94       	cli
 14a:	3e bf       	out	0x3e, r19	; 62
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	2d bf       	out	0x3d, r18	; 61
 150:	8d b7       	in	r24, 0x3d	; 61
 152:	9e b7       	in	r25, 0x3e	; 62
 154:	01 96       	adiw	r24, 0x01	; 1
 156:	6c 01       	movw	r12, r24
 158:	be 01       	movw	r22, r28
 15a:	6d 5e       	subi	r22, 0xED	; 237
 15c:	7f 4f       	sbci	r23, 0xFF	; 255
 15e:	ce 01       	movw	r24, r28
 160:	01 96       	adiw	r24, 0x01	; 1
 162:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 166:	b6 01       	movw	r22, r12
 168:	ce 01       	movw	r24, r28
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 170:	ce 01       	movw	r24, r28
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 178:	b6 01       	movw	r22, r12
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 182:	f5 01       	movw	r30, r10
 184:	e4 58       	subi	r30, 0x84	; 132
 186:	ff 4f       	sbci	r31, 0xFF	; 255
 188:	40 81       	ld	r20, Z
 18a:	51 81       	ldd	r21, Z+1	; 0x01
 18c:	ee 24       	eor	r14, r14
 18e:	e3 94       	inc	r14
 190:	08 e9       	ldi	r16, 0x98	; 152
 192:	1a e3       	ldi	r17, 0x3A	; 58
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	b6 01       	movw	r22, r12
 19a:	c5 01       	movw	r24, r10
 19c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 1a0:	ce 01       	movw	r24, r28
 1a2:	43 96       	adiw	r24, 0x13	; 19
 1a4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpParaEP9HttpParam>
 1a8:	0f b6       	in	r0, 0x3f	; 63
 1aa:	f8 94       	cli
 1ac:	9e be       	out	0x3e, r9	; 62
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	8d be       	out	0x3d, r8	; 61
 1b2:	68 96       	adiw	r28, 0x18	; 24
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	de bf       	out	0x3e, r29	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	cd bf       	out	0x3d, r28	; 61
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ef 90       	pop	r14
 1c8:	df 90       	pop	r13
 1ca:	cf 90       	pop	r12
 1cc:	bf 90       	pop	r11
 1ce:	af 90       	pop	r10
 1d0:	9f 90       	pop	r9
 1d2:	8f 90       	pop	r8
 1d4:	08 95       	ret

Disassembly of section .text._ZN7Sim900a11runHttpDataEP9HttpParam:

00000000 <_ZN7Sim900a11runHttpDataEP9HttpParam>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	0f 93       	push	r16
   c:	1f 93       	push	r17
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	68 97       	sbiw	r28, 0x18	; 24
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	de bf       	out	0x3e, r29	; 62
	reconnect(param->host, param->port);
  1e:	0f be       	out	0x3f, r0	; 63
  20:	cd bf       	out	0x3d, r28	; 61
  22:	5c 01       	movw	r10, r24
  24:	cd b6       	in	r12, 0x3d	; 61
  26:	de b6       	in	r13, 0x3e	; 62
  28:	fb 01       	movw	r30, r22
  2a:	00 85       	ldd	r16, Z+8	; 0x08
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	11 85       	ldd	r17, Z+9	; 0x09
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	ce 01       	movw	r24, r28
  34:	01 96       	adiw	r24, 0x01	; 1
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  3a:	a8 01       	movw	r20, r16
  3c:	be 01       	movw	r22, r28
  3e:	6f 5f       	subi	r22, 0xFF	; 255
  40:	7f 4f       	sbci	r23, 0xFF	; 255
  42:	ce 01       	movw	r24, r28
	sendCode(method);
  44:	43 96       	adiw	r24, 0x13	; 19
  46:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  4a:	ce 01       	movw	r24, r28
	sendCode(" ");
  4c:	01 96       	adiw	r24, 0x01	; 1
  4e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  52:	be 01       	movw	r22, r28
  54:	6d 5e       	subi	r22, 0xED	; 237
	sendCode(param->url);
  56:	7f 4f       	sbci	r23, 0xFF	; 255
  58:	80 e0       	ldi	r24, 0x00	; 0
  5a:	90 e0       	ldi	r25, 0x00	; 0
  5c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  60:	60 e0       	ldi	r22, 0x00	; 0
	sendCodeln(HTTP_VERSION);
  62:	70 e0       	ldi	r23, 0x00	; 0
  64:	ce 01       	movw	r24, r28
  66:	07 96       	adiw	r24, 0x07	; 7
  68:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
	sendCode("HOST: ");
  6c:	be 01       	movw	r22, r28
  6e:	6d 5e       	subi	r22, 0xED	; 237
  70:	7f 4f       	sbci	r23, 0xFF	; 255
  72:	ce 01       	movw	r24, r28
  74:	0d 96       	adiw	r24, 0x0d	; 13
	sendCodeln(param->host);
  76:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  7a:	ae 01       	movw	r20, r28
  7c:	49 5f       	subi	r20, 0xF9	; 249
  7e:	5f 4f       	sbci	r21, 0xFF	; 255
  80:	be 01       	movw	r22, r28
	sendCode("Content-Type:");
  82:	63 5f       	subi	r22, 0xF3	; 243
  84:	7f 4f       	sbci	r23, 0xFF	; 255
  86:	ce 01       	movw	r24, r28
  88:	01 96       	adiw	r24, 0x01	; 1
  8a:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
	sendCodeln(HTTP_CONTENTYPE);
  8e:	be 01       	movw	r22, r28
  90:	6f 5f       	subi	r22, 0xFF	; 255
  92:	7f 4f       	sbci	r23, 0xFF	; 255
  94:	ce 01       	movw	r24, r28
	sendCode("Content-Length: ");
  96:	43 96       	adiw	r24, 0x13	; 19
  98:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  9c:	ce 01       	movw	r24, r28
  9e:	01 96       	adiw	r24, 0x01	; 1
	sendCode(param->length);
  a0:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  a4:	ce 01       	movw	r24, r28
  a6:	0d 96       	adiw	r24, 0x0d	; 13
  a8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
	sendCodeln(HTTP_NEW_LINE);
  ac:	ce 01       	movw	r24, r28
  ae:	07 96       	adiw	r24, 0x07	; 7
  b0:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  b4:	be 01       	movw	r22, r28
	sendCode(code);
  b6:	6d 5e       	subi	r22, 0xED	; 237
  b8:	7f 4f       	sbci	r23, 0xFF	; 255
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
	sendCode(SEND_FLAG);
  be:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
  c2:	8f 89       	ldd	r24, Y+23	; 0x17
  c4:	98 8d       	ldd	r25, Y+24	; 0x18
  c6:	2d b7       	in	r18, 0x3d	; 61
	sendCodeln(HTTP_NEW_LINE);
  c8:	3e b7       	in	r19, 0x3e	; 62
  ca:	28 1b       	sub	r18, r24
  cc:	39 0b       	sbc	r19, r25
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	f8 94       	cli
	readFromServer(10000, "scp");
  d2:	3e bf       	out	0x3e, r19	; 62
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	2d bf       	out	0x3d, r18	; 61
  d8:	0d b7       	in	r16, 0x3d	; 61
  da:	1e b7       	in	r17, 0x3e	; 62
  dc:	0f 5f       	subi	r16, 0xFF	; 255
  de:	1f 4f       	sbci	r17, 0xFF	; 255
  e0:	be 01       	movw	r22, r28
  e2:	6d 5e       	subi	r22, 0xED	; 237
	Serial.println();
  e4:	7f 4f       	sbci	r23, 0xFF	; 255
  e6:	ce 01       	movw	r24, r28
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
	delay(1000);
  ee:	b8 01       	movw	r22, r16
  f0:	ce 01       	movw	r24, r28
  f2:	01 96       	adiw	r24, 0x01	; 1
  f4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
	char* _command;
	command.toCharArray(_command, command.length());
	sendATcommandTimeout(_command, "CONNECT OK", 15000, true);
}
void Sim900a::close_connect() {
	Serial.println("close_connect >>>");
  f8:	ce 01       	movw	r24, r28
  fa:	01 96       	adiw	r24, 0x01	; 1
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
 100:	b8 01       	movw	r22, r16
 102:	80 e0       	ldi	r24, 0x00	; 0
	sendATcommandTimeout("AT+CIPCLOSE", "CLOSE OK", 15000, false);
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
 10a:	ee 24       	eor	r14, r14
 10c:	e3 94       	inc	r14
 10e:	08 e9       	ldi	r16, 0x98	; 152
 110:	1a e3       	ldi	r17, 0x3A	; 58
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	40 e0       	ldi	r20, 0x00	; 0
 118:	50 e0       	ldi	r21, 0x00	; 0
	Serial.println("close_connect >>>");
 11a:	60 e0       	ldi	r22, 0x00	; 0
 11c:	70 e0       	ldi	r23, 0x00	; 0
 11e:	c5 01       	movw	r24, r10
 120:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
 124:	ce 01       	movw	r24, r28
	sendCodeln(HTTP_NEW_LINE);
	readFromServer(10000, "scp");
	Serial.println();
	delay(1000);
	close_connect();
	Serial.println("request >>>");
 126:	43 96       	adiw	r24, 0x13	; 19
 128:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a11runHttpDataEP9HttpParam>
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	f8 94       	cli
 130:	de be       	out	0x3e, r13	; 62
	return serialResponse;
}
 132:	0f be       	out	0x3f, r0	; 63
 134:	cd be       	out	0x3d, r12	; 61
 136:	68 96       	adiw	r28, 0x18	; 24
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	f8 94       	cli
 13c:	de bf       	out	0x3e, r29	; 62
 13e:	0f be       	out	0x3f, r0	; 63
 140:	cd bf       	out	0x3d, r28	; 61
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	1f 91       	pop	r17
 148:	0f 91       	pop	r16
 14a:	ef 90       	pop	r14
 14c:	df 90       	pop	r13
 14e:	cf 90       	pop	r12
 150:	bf 90       	pop	r11
 152:	af 90       	pop	r10
 154:	08 95       	ret

Disassembly of section .text._ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam:

00000000 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	0f 93       	push	r16
  10:	1f 93       	push	r17
  12:	cf 93       	push	r28
  14:	df 93       	push	r29
  16:	ec 01       	movw	r28, r24
  18:	4b 01       	movw	r8, r22
  1a:	59 01       	movw	r10, r18
  1c:	6c 01       	movw	r12, r24
	reconnect(param->host, param->port);
  1e:	8c e7       	ldi	r24, 0x7C	; 124
  20:	c8 0e       	add	r12, r24
  22:	d1 1c       	adc	r13, r1
  24:	f6 01       	movw	r30, r12
  26:	40 81       	ld	r20, Z
  28:	51 81       	ldd	r21, Z+1	; 0x01
  2a:	ee 24       	eor	r14, r14
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	e3 94       	inc	r14
  2e:	08 e9       	ldi	r16, 0x98	; 152
  30:	1a e3       	ldi	r17, 0x3A	; 58
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	30 e0       	ldi	r19, 0x00	; 0
  36:	60 e0       	ldi	r22, 0x00	; 0
  38:	70 e0       	ldi	r23, 0x00	; 0
  3a:	ce 01       	movw	r24, r28
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  40:	b5 01       	movw	r22, r10
  42:	ce 01       	movw	r24, r28
	sendCode(method);
  44:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  48:	6a e0       	ldi	r22, 0x0A	; 10
  4a:	70 e0       	ldi	r23, 0x00	; 0
	sendCode(" ");
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  54:	b5 01       	movw	r22, r10
	sendCode(param->url);
  56:	ce 01       	movw	r24, r28
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  5c:	f6 01       	movw	r30, r12
  5e:	40 81       	ld	r20, Z
  60:	51 81       	ldd	r21, Z+1	; 0x01
	sendCodeln(HTTP_VERSION);
  62:	08 ee       	ldi	r16, 0xE8	; 232
  64:	13 e0       	ldi	r17, 0x03	; 3
  66:	20 e0       	ldi	r18, 0x00	; 0
  68:	30 e0       	ldi	r19, 0x00	; 0
  6a:	b4 01       	movw	r22, r8
	sendCode("HOST: ");
  6c:	ce 01       	movw	r24, r28
  6e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  72:	08 e9       	ldi	r16, 0x98	; 152
  74:	1a e3       	ldi	r17, 0x3A	; 58
	sendCodeln(param->host);
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	30 e0       	ldi	r19, 0x00	; 0
  7a:	40 e0       	ldi	r20, 0x00	; 0
  7c:	50 e0       	ldi	r21, 0x00	; 0
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	70 e0       	ldi	r23, 0x00	; 0
	sendCode("Content-Type:");
  82:	ce 01       	movw	r24, r28
  84:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	30 e0       	ldi	r19, 0x00	; 0
	sendCodeln(HTTP_CONTENTYPE);
  8c:	48 e9       	ldi	r20, 0x98	; 152
  8e:	5a e3       	ldi	r21, 0x3A	; 58
  90:	60 e0       	ldi	r22, 0x00	; 0
  92:	70 e0       	ldi	r23, 0x00	; 0
  94:	ce 01       	movw	r24, r28
	sendCode("Content-Length: ");
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a13requestOnHttpEPcS0_P9HttpParam>
  9a:	ce 01       	movw	r24, r28
  9c:	48 96       	adiw	r24, 0x18	; 24
  9e:	df 91       	pop	r29
	sendCode(param->length);
  a0:	cf 91       	pop	r28
  a2:	1f 91       	pop	r17
  a4:	0f 91       	pop	r16
  a6:	ef 90       	pop	r14
  a8:	df 90       	pop	r13
  aa:	cf 90       	pop	r12
	sendCodeln(HTTP_NEW_LINE);
  ac:	bf 90       	pop	r11
  ae:	af 90       	pop	r10
  b0:	9f 90       	pop	r9
  b2:	8f 90       	pop	r8
  b4:	08 95       	ret

Disassembly of section .text._ZN7Sim900a7httpGetEP9HttpParam:

00000000 <_ZN7Sim900a7httpGetEP9HttpParam>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	70 e0       	ldi	r23, 0x00	; 0
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a7httpGetEP9HttpParam>
  18:	4e 85       	ldd	r20, Y+14	; 0x0e
  1a:	5f 85       	ldd	r21, Y+15	; 0x0f
  1c:	f8 01       	movw	r30, r16
	reconnect(param->host, param->port);
  1e:	66 81       	ldd	r22, Z+6	; 0x06
  20:	77 81       	ldd	r23, Z+7	; 0x07
  22:	98 01       	movw	r18, r16
  24:	ce 01       	movw	r24, r28
  26:	df 91       	pop	r29
  28:	cf 91       	pop	r28
  2a:	1f 91       	pop	r17
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	0f 91       	pop	r16
  2e:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a7httpGetEP9HttpParam>

Disassembly of section .text._ZN7Sim900a8httpPostEP9HttpParam:

00000000 <_ZN7Sim900a8httpPostEP9HttpParam>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	70 e0       	ldi	r23, 0x00	; 0
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a8httpPostEP9HttpParam>
  18:	4c 85       	ldd	r20, Y+12	; 0x0c
  1a:	5d 85       	ldd	r21, Y+13	; 0x0d
  1c:	f8 01       	movw	r30, r16
	reconnect(param->host, param->port);
  1e:	66 81       	ldd	r22, Z+6	; 0x06
  20:	77 81       	ldd	r23, Z+7	; 0x07
  22:	98 01       	movw	r18, r16
  24:	ce 01       	movw	r24, r28
  26:	df 91       	pop	r29
  28:	cf 91       	pop	r28
  2a:	1f 91       	pop	r17
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	0f 91       	pop	r16
  2e:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a8httpPostEP9HttpParam>

Disassembly of section .text._ZN7Sim900a8sendCodeEPc:

00000000 <_ZN7Sim900a8sendCodeEPc>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	eb 01       	movw	r28, r22
   c:	80 e0       	ldi	r24, 0x00	; 0
   e:	90 e0       	ldi	r25, 0x00	; 0
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a8sendCodeEPc>
  14:	be 01       	movw	r22, r28
  16:	f8 01       	movw	r30, r16
  18:	80 81       	ld	r24, Z
  1a:	91 81       	ldd	r25, Z+1	; 0x01
  1c:	df 91       	pop	r29
	reconnect(param->host, param->port);
  1e:	cf 91       	pop	r28
  20:	1f 91       	pop	r17
  22:	0f 91       	pop	r16
  24:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a8sendCodeEPc>

Disassembly of section .text._ZN7Sim900a10sendCodelnEPc:

00000000 <_ZN7Sim900a10sendCodelnEPc>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	eb 01       	movw	r28, r22
   c:	80 e0       	ldi	r24, 0x00	; 0
   e:	90 e0       	ldi	r25, 0x00	; 0
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a10sendCodelnEPc>
  14:	be 01       	movw	r22, r28
  16:	f8 01       	movw	r30, r16
  18:	80 81       	ld	r24, Z
  1a:	91 81       	ldd	r25, Z+1	; 0x01
  1c:	df 91       	pop	r29
	reconnect(param->host, param->port);
  1e:	cf 91       	pop	r28
  20:	1f 91       	pop	r17
  22:	0f 91       	pop	r16
  24:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a10sendCodelnEPc>

Disassembly of section .text._ZN7Sim900a10sendCodelnEi:

00000000 <_ZN7Sim900a10sendCodelnEi>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	eb 01       	movw	r28, r22
   c:	4a e0       	ldi	r20, 0x0A	; 10
   e:	50 e0       	ldi	r21, 0x00	; 0
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a10sendCodelnEi>
  18:	4a e0       	ldi	r20, 0x0A	; 10
  1a:	50 e0       	ldi	r21, 0x00	; 0
  1c:	be 01       	movw	r22, r28
	reconnect(param->host, param->port);
  1e:	f8 01       	movw	r30, r16
  20:	80 81       	ld	r24, Z
  22:	91 81       	ldd	r25, Z+1	; 0x01
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	1f 91       	pop	r17
  2a:	0f 91       	pop	r16
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a10sendCodelnEi>

Disassembly of section .text._ZN7Sim900a8sendCodeEi:

00000000 <_ZN7Sim900a8sendCodeEi>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	eb 01       	movw	r28, r22
   c:	4a e0       	ldi	r20, 0x0A	; 10
   e:	50 e0       	ldi	r21, 0x00	; 0
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a8sendCodeEi>
  18:	4a e0       	ldi	r20, 0x0A	; 10
  1a:	50 e0       	ldi	r21, 0x00	; 0
  1c:	be 01       	movw	r22, r28
	reconnect(param->host, param->port);
  1e:	f8 01       	movw	r30, r16
  20:	80 81       	ld	r24, Z
  22:	91 81       	ldd	r25, Z+1	; 0x01
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	1f 91       	pop	r17
  2a:	0f 91       	pop	r16
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	0c 94 00 00 	jmp	0	; 0x0 <_ZN7Sim900a8sendCodeEi>

Disassembly of section .text._ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam:

00000000 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>:
void Sim900a::sendCode(int i) {
	Serial.print(i);
	this->mySerial->print(i);
}

char* Sim900a::requestOnTcp(char* code, char* method, HttpParam* param) {
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	0f 93       	push	r16
  10:	1f 93       	push	r17
  12:	cf 93       	push	r28
  14:	df 93       	push	r29
  16:	ec 01       	movw	r28, r24
  18:	5b 01       	movw	r10, r22
  1a:	4a 01       	movw	r8, r20
  1c:	69 01       	movw	r12, r18
	reconnect(param->host, param->port);
  1e:	f9 01       	movw	r30, r18
  20:	42 81       	ldd	r20, Z+2	; 0x02
  22:	53 81       	ldd	r21, Z+3	; 0x03
  24:	60 81       	ld	r22, Z
  26:	71 81       	ldd	r23, Z+1	; 0x01
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendATcommandTimeout("AT+CIPSEND=512", ">", 15000, false);
  2c:	e1 2c       	mov	r14, r1
  2e:	08 e9       	ldi	r16, 0x98	; 152
  30:	1a e3       	ldi	r17, 0x3A	; 58
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	30 e0       	ldi	r19, 0x00	; 0
  36:	40 e0       	ldi	r20, 0x00	; 0
  38:	50 e0       	ldi	r21, 0x00	; 0
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	ce 01       	movw	r24, r28
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode(method);
  44:	b4 01       	movw	r22, r8
  46:	ce 01       	movw	r24, r28
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode(" ");
  4c:	60 e0       	ldi	r22, 0x00	; 0
  4e:	70 e0       	ldi	r23, 0x00	; 0
  50:	ce 01       	movw	r24, r28
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode(param->url);
  56:	f6 01       	movw	r30, r12
  58:	64 81       	ldd	r22, Z+4	; 0x04
  5a:	75 81       	ldd	r23, Z+5	; 0x05
  5c:	ce 01       	movw	r24, r28
  5e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCodeln(HTTP_VERSION);
  62:	6a 89       	ldd	r22, Y+18	; 0x12
  64:	7b 89       	ldd	r23, Y+19	; 0x13
  66:	ce 01       	movw	r24, r28
  68:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode("HOST: ");
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	70 e0       	ldi	r23, 0x00	; 0
  70:	ce 01       	movw	r24, r28
  72:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCodeln(param->host);
  76:	f6 01       	movw	r30, r12
  78:	60 81       	ld	r22, Z
  7a:	71 81       	ldd	r23, Z+1	; 0x01
  7c:	ce 01       	movw	r24, r28
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode("Content-Type:");
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	70 e0       	ldi	r23, 0x00	; 0
  86:	ce 01       	movw	r24, r28
  88:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCodeln(HTTP_CONTENTYPE);
  8c:	6c 89       	ldd	r22, Y+20	; 0x14
  8e:	7d 89       	ldd	r23, Y+21	; 0x15
  90:	ce 01       	movw	r24, r28
  92:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode("Content-Length: ");
  96:	60 e0       	ldi	r22, 0x00	; 0
  98:	70 e0       	ldi	r23, 0x00	; 0
  9a:	ce 01       	movw	r24, r28
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode(param->length);
  a0:	f6 01       	movw	r30, r12
  a2:	60 85       	ldd	r22, Z+8	; 0x08
  a4:	71 85       	ldd	r23, Z+9	; 0x09
  a6:	ce 01       	movw	r24, r28
  a8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCodeln(HTTP_NEW_LINE);
  ac:	68 89       	ldd	r22, Y+16	; 0x10
  ae:	79 89       	ldd	r23, Y+17	; 0x11
  b0:	ce 01       	movw	r24, r28
  b2:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode(code);
  b6:	b5 01       	movw	r22, r10
  b8:	ce 01       	movw	r24, r28
  ba:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCode(SEND_FLAG);
  be:	6e 89       	ldd	r22, Y+22	; 0x16
  c0:	7f 89       	ldd	r23, Y+23	; 0x17
  c2:	ce 01       	movw	r24, r28
  c4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCodeln(HTTP_NEW_LINE);
  c8:	68 89       	ldd	r22, Y+16	; 0x10
  ca:	79 89       	ldd	r23, Y+17	; 0x11
  cc:	ce 01       	movw	r24, r28
  ce:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	readFromServer(10000, "scp");
  d2:	20 e0       	ldi	r18, 0x00	; 0
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	40 e1       	ldi	r20, 0x10	; 16
  d8:	57 e2       	ldi	r21, 0x27	; 39
  da:	60 e0       	ldi	r22, 0x00	; 0
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	ce 01       	movw	r24, r28
  e0:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	Serial.println();
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	delay(1000);
  ec:	68 ee       	ldi	r22, 0xE8	; 232
  ee:	73 e0       	ldi	r23, 0x03	; 3
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	char* _command;
	command.toCharArray(_command, command.length());
	sendATcommandTimeout(_command, "CONNECT OK", 15000, true);
}
void Sim900a::close_connect() {
	Serial.println("close_connect >>>");
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendATcommandTimeout("AT+CIPCLOSE", "CLOSE OK", 15000, false);
 104:	08 e9       	ldi	r16, 0x98	; 152
 106:	1a e3       	ldi	r17, 0x3A	; 58
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	40 e0       	ldi	r20, 0x00	; 0
 10e:	50 e0       	ldi	r21, 0x00	; 0
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	ce 01       	movw	r24, r28
 116:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	Serial.println("close_connect >>>");
 11a:	60 e0       	ldi	r22, 0x00	; 0
 11c:	70 e0       	ldi	r23, 0x00	; 0
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	sendCodeln(HTTP_NEW_LINE);
	readFromServer(10000, "scp");
	Serial.println();
	delay(1000);
	close_connect();
	Serial.println("request >>>");
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 00 00 	call	0	; 0x0 <_ZN7Sim900a12requestOnTcpEPcS0_P9HttpParam>
	return serialResponse;
}
 132:	ce 01       	movw	r24, r28
 134:	48 96       	adiw	r24, 0x18	; 24
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	1f 91       	pop	r17
 13c:	0f 91       	pop	r16
 13e:	ef 90       	pop	r14
 140:	df 90       	pop	r13
 142:	cf 90       	pop	r12
 144:	bf 90       	pop	r11
 146:	af 90       	pop	r10
 148:	9f 90       	pop	r9
 14a:	8f 90       	pop	r8
 14c:	08 95       	ret

http.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000ae0  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00001d76  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .rodata.str1.1 00000072  00000000  00000000  0000288a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .text._ZN10HttpClient8readHttpE14EthernetClienti 0000005c  00000000  00000000  000028fc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN10HttpClient7httpGetEPcS0_i 00000154  00000000  00000000  00002958  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.startup._GLOBAL__sub_I_mac 0000002c  00000000  00000000  00002aac  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .ctors        00000002  00000000  00000000  00002ad8  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 10 .bss.client   0000000d  00000000  00000000  00002ada  2**0
                  ALLOC
 11 .bss.ip       00000006  00000000  00000000  00002ada  2**0
                  ALLOC
 12 .data.mac     00000006  00000000  00000000  00002ada  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss._ZL11INADDR_NONE 00000006  00000000  00000000  00002ae0  2**0
                  ALLOC
 14 .comment      00000012  00000000  00000000  00002ae0  2**0
                  CONTENTS, READONLY

Disassembly of section .text._ZN10HttpClient8readHttpE14EthernetClienti:

00000000 <_ZN10HttpClient8readHttpE14EthernetClienti>:
			Serial.println();
			Serial.println("disconnecting.");
			client.stop();
		}
	}
}
   0:	0f 93       	push	r16
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0,0,0,0);
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	eb 01       	movw	r28, r22
   a:	8a 01       	movw	r16, r20
   c:	01 15       	cp	r16, r1
   e:	11 05       	cpc	r17, r1
  10:	01 f0       	breq	.+0      	; 0x12 <_ZN10HttpClient8readHttpE14EthernetClienti+0x12>
// if you don't want to use DNS (and reduce your sketch size)
// use the numeric IP instead of the name for the server:
//IPAddress server(74,125,232,128);  // numeric IP for Google (no DNS)

// Set the static IP address to use if the DHCP fails to assign
IPAddress ip(192, 168, 0, 177);
  12:	ce 01       	movw	r24, r28
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>
  18:	89 2b       	or	r24, r25
  1a:	01 f0       	breq	.+0      	; 0x1c <_ZN10HttpClient8readHttpE14EthernetClienti+0x1c>
  1c:	ce 01       	movw	r24, r28
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>

// Initialize the Ethernet client library
// with the IP address and port of the server
// that you want to connect to (port 80 is default for HTTP):
EthernetClient client;
  22:	68 2f       	mov	r22, r24
  24:	80 e0       	ldi	r24, 0x00	; 0
			Serial.println();
			Serial.println("disconnecting.");
			client.stop();
		}
	}
}
  26:	90 e0       	ldi	r25, 0x00	; 0
IPAddress ip(192, 168, 0, 177);

// Initialize the Ethernet client library
// with the IP address and port of the server
// that you want to connect to (port 80 is default for HTTP):
EthernetClient client;
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>
  2c:	ce 01       	movw	r24, r28
  2e:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>
  32:	81 11       	cpse	r24, r1
  34:	00 c0       	rjmp	.+0      	; 0x36 <_ZN10HttpClient8readHttpE14EthernetClienti+0x36>
  36:	80 e0       	ldi	r24, 0x00	; 0
  38:	90 e0       	ldi	r25, 0x00	; 0
  3a:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>
  3e:	60 e0       	ldi	r22, 0x00	; 0
  40:	70 e0       	ldi	r23, 0x00	; 0
  42:	80 e0       	ldi	r24, 0x00	; 0
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>
  4a:	ce 01       	movw	r24, r28
  4c:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient8readHttpE14EthernetClienti>
  50:	00 c0       	rjmp	.+0      	; 0x52 <_ZN10HttpClient8readHttpE14EthernetClienti+0x52>
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	08 95       	ret

Disassembly of section .text._ZN10HttpClient7httpGetEPcS0_i:

00000000 <_ZN10HttpClient7httpGetEPcS0_i>:
			Serial.println();
			Serial.println("disconnecting.");
			client.stop();
		}
	}
}
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
// if you don't want to use DNS (and reduce your sketch size)
// use the numeric IP instead of the name for the server:
//IPAddress server(74,125,232,128);  // numeric IP for Google (no DNS)

// Set the static IP address to use if the DHCP fails to assign
IPAddress ip(192, 168, 0, 177);
  12:	df 93       	push	r29
  14:	cd b7       	in	r28, 0x3d	; 61
  16:	de b7       	in	r29, 0x3e	; 62
  18:	2d 97       	sbiw	r28, 0x0d	; 13
  1a:	0f b6       	in	r0, 0x3f	; 63
  1c:	f8 94       	cli
  1e:	de bf       	out	0x3e, r29	; 62
  20:	0f be       	out	0x3f, r0	; 63

// Initialize the Ethernet client library
// with the IP address and port of the server
// that you want to connect to (port 80 is default for HTTP):
EthernetClient client;
  22:	cd bf       	out	0x3d, r28	; 61
  24:	8c 01       	movw	r16, r24
			Serial.println();
			Serial.println("disconnecting.");
			client.stop();
		}
	}
}
  26:	5b 01       	movw	r10, r22
IPAddress ip(192, 168, 0, 177);

// Initialize the Ethernet client library
// with the IP address and port of the server
// that you want to connect to (port 80 is default for HTTP):
EthernetClient client;
  28:	6a 01       	movw	r12, r20
  2a:	79 01       	movw	r14, r18
  2c:	60 e0       	ldi	r22, 0x00	; 0
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	80 e0       	ldi	r24, 0x00	; 0
  32:	90 e0       	ldi	r25, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  38:	80 e0       	ldi	r24, 0x00	; 0
  3a:	90 e0       	ldi	r25, 0x00	; 0
  3c:	9a 83       	std	Y+2, r25	; 0x02
  3e:	89 83       	std	Y+1, r24	; 0x01
  40:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  44:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  48:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4c:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  50:	8b 83       	std	Y+3, r24	; 0x03
  52:	9c 83       	std	Y+4, r25	; 0x04
  54:	ad 83       	std	Y+5, r26	; 0x05
  56:	be 83       	std	Y+6, r27	; 0x06
  58:	ae 01       	movw	r20, r28
  5a:	4f 5f       	subi	r20, 0xFF	; 255
  5c:	5f 4f       	sbci	r21, 0xFF	; 255
  5e:	60 e0       	ldi	r22, 0x00	; 0
  60:	70 e0       	ldi	r23, 0x00	; 0
  62:	80 e0       	ldi	r24, 0x00	; 0
  64:	90 e0       	ldi	r25, 0x00	; 0
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  6a:	68 ee       	ldi	r22, 0xE8	; 232
  6c:	73 e0       	ldi	r23, 0x03	; 3
  6e:	80 e0       	ldi	r24, 0x00	; 0
  70:	90 e0       	ldi	r25, 0x00	; 0
  72:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  76:	60 e0       	ldi	r22, 0x00	; 0
  78:	70 e0       	ldi	r23, 0x00	; 0
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  82:	40 e5       	ldi	r20, 0x50	; 80
  84:	50 e0       	ldi	r21, 0x00	; 0
  86:	b5 01       	movw	r22, r10
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  90:	89 2b       	or	r24, r25
  92:	01 f4       	brne	.+0      	; 0x94 <_ZN10HttpClient7httpGetEPcS0_i+0x94>
  94:	00 c0       	rjmp	.+0      	; 0x96 <_ZN10HttpClient7httpGetEPcS0_i+0x96>
  96:	60 e0       	ldi	r22, 0x00	; 0
  98:	70 e0       	ldi	r23, 0x00	; 0
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  a2:	60 e0       	ldi	r22, 0x00	; 0
  a4:	70 e0       	ldi	r23, 0x00	; 0
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  ae:	b6 01       	movw	r22, r12
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  b8:	60 e0       	ldi	r22, 0x00	; 0
  ba:	70 e0       	ldi	r23, 0x00	; 0
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
  cc:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  d0:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  d4:	9c 83       	std	Y+4, r25	; 0x04
  d6:	8b 83       	std	Y+3, r24	; 0x03
  d8:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  dc:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  e0:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  e4:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  e8:	8d 83       	std	Y+5, r24	; 0x05
  ea:	9e 83       	std	Y+6, r25	; 0x06
  ec:	af 83       	std	Y+7, r26	; 0x07
  ee:	b8 87       	std	Y+8, r27	; 0x08
  f0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  f4:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  f8:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  fc:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 100:	89 87       	std	Y+9, r24	; 0x09
 102:	9a 87       	std	Y+10, r25	; 0x0a
 104:	ab 87       	std	Y+11, r26	; 0x0b
 106:	bc 87       	std	Y+12, r27	; 0x0c
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	9a 83       	std	Y+2, r25	; 0x02
 10e:	89 83       	std	Y+1, r24	; 0x01
 110:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 114:	8d 87       	std	Y+13, r24	; 0x0d
 116:	a7 01       	movw	r20, r14
 118:	be 01       	movw	r22, r28
 11a:	6f 5f       	subi	r22, 0xFF	; 255
 11c:	7f 4f       	sbci	r23, 0xFF	; 255
 11e:	c8 01       	movw	r24, r16
 120:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
 124:	00 c0       	rjmp	.+0      	; 0x126 <_ZN10HttpClient7httpGetEPcS0_i+0x126>
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 00 00 	call	0	; 0x0 <_ZN10HttpClient7httpGetEPcS0_i>
 132:	2d 96       	adiw	r28, 0x0d	; 13
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	f8 94       	cli
 138:	de bf       	out	0x3e, r29	; 62
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	cd bf       	out	0x3d, r28	; 61
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	1f 91       	pop	r17
 144:	0f 91       	pop	r16
 146:	ff 90       	pop	r15
 148:	ef 90       	pop	r14
 14a:	df 90       	pop	r13
 14c:	cf 90       	pop	r12
 14e:	bf 90       	pop	r11
 150:	af 90       	pop	r10
 152:	08 95       	ret

Disassembly of section .text.startup._GLOBAL__sub_I_mac:

00000000 <_GLOBAL__sub_I_mac>:
			Serial.println();
			Serial.println("disconnecting.");
			client.stop();
		}
	}
}
   0:	0f 93       	push	r16
   2:	00 e0       	ldi	r16, 0x00	; 0
   4:	20 e0       	ldi	r18, 0x00	; 0
   6:	40 e0       	ldi	r20, 0x00	; 0
   8:	60 e0       	ldi	r22, 0x00	; 0
   a:	80 e0       	ldi	r24, 0x00	; 0
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	0e 94 00 00 	call	0	; 0x0 <_GLOBAL__sub_I_mac>
// if you don't want to use DNS (and reduce your sketch size)
// use the numeric IP instead of the name for the server:
//IPAddress server(74,125,232,128);  // numeric IP for Google (no DNS)

// Set the static IP address to use if the DHCP fails to assign
IPAddress ip(192, 168, 0, 177);
  12:	01 eb       	ldi	r16, 0xB1	; 177
  14:	20 e0       	ldi	r18, 0x00	; 0
  16:	48 ea       	ldi	r20, 0xA8	; 168
  18:	60 ec       	ldi	r22, 0xC0	; 192
  1a:	80 e0       	ldi	r24, 0x00	; 0
  1c:	90 e0       	ldi	r25, 0x00	; 0
  1e:	0e 94 00 00 	call	0	; 0x0 <_GLOBAL__sub_I_mac>

// Initialize the Ethernet client library
// with the IP address and port of the server
// that you want to connect to (port 80 is default for HTTP):
EthernetClient client;
  22:	80 e0       	ldi	r24, 0x00	; 0
  24:	90 e0       	ldi	r25, 0x00	; 0
			Serial.println();
			Serial.println("disconnecting.");
			client.stop();
		}
	}
}
  26:	0f 91       	pop	r16
IPAddress ip(192, 168, 0, 177);

// Initialize the Ethernet client library
// with the IP address and port of the server
// that you want to connect to (port 80 is default for HTTP):
EthernetClient client;
  28:	0c 94 00 00 	jmp	0	; 0x0 <_GLOBAL__sub_I_mac>

util.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000a50  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000016a1  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._Z14charAppendCharPcS_ 0000009c  00000000  00000000  00002125  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._Z13strAppendChar6StringPc 00000056  00000000  00000000  000021c1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._Z12strAppendStr6StringS_ 00000056  00000000  00000000  00002217  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._Z12strAppendInt6Stringi 00000056  00000000  00000000  0000226d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .rodata.str1.1 00000008  00000000  00000000  000022c3  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .text._Z15convertStrToHexPcPhi 0000006c  00000000  00000000  000022cb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._Z11intToStringiPc 00000022  00000000  00000000  00002337  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._Z9strToChar6StringPc 00000012  00000000  00000000  00002359  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .comment      00000012  00000000  00000000  0000236b  2**0
                  CONTENTS, READONLY

Disassembly of section .text._Z14charAppendCharPcS_:

00000000 <_Z14charAppendCharPcS_>:
	void setCharAt(unsigned int index, char c);
	char operator [] (unsigned int index) const;
	char& operator [] (unsigned int index);
	void getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;
	void toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const
		{getBytes((unsigned char *)buf, bufsize, index);}
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
  12:	8b 01       	movw	r16, r22
  14:	db 01       	movw	r26, r22
  16:	0d 90       	ld	r0, X+
  18:	00 20       	and	r0, r0
  1a:	01 f4       	brne	.+0      	; 0x1c <_Z14charAppendCharPcS_+0x1c>
  1c:	fc 01       	movw	r30, r24
  1e:	01 90       	ld	r0, Z+
  20:	00 20       	and	r0, r0
  22:	01 f4       	brne	.+0      	; 0x24 <_Z14charAppendCharPcS_+0x24>
  24:	31 97       	sbiw	r30, 0x01	; 1
  26:	e8 1b       	sub	r30, r24
  28:	f9 0b       	sbc	r31, r25
  2a:	e6 1b       	sub	r30, r22
  2c:	f7 0b       	sbc	r31, r23
  2e:	6f 01       	movw	r12, r30
  30:	ca 0e       	add	r12, r26
  32:	db 1e       	adc	r13, r27
  34:	c6 01       	movw	r24, r12
  36:	0e 94 00 00 	call	0	; 0x0 <_Z14charAppendCharPcS_>
  3a:	7c 01       	movw	r14, r24
  3c:	a6 01       	movw	r20, r12
  3e:	60 e0       	ldi	r22, 0x00	; 0
  40:	70 e0       	ldi	r23, 0x00	; 0
  42:	0e 94 00 00 	call	0	; 0x0 <_Z14charAppendCharPcS_>
  46:	fe 01       	movw	r30, r28
  48:	01 90       	ld	r0, Z+
  4a:	00 20       	and	r0, r0
  4c:	01 f4       	brne	.+0      	; 0x4e <_Z14charAppendCharPcS_+0x4e>
  4e:	31 97       	sbiw	r30, 0x01	; 1
  50:	af 01       	movw	r20, r30
  52:	4c 1b       	sub	r20, r28
  54:	5d 0b       	sbc	r21, r29
  56:	be 01       	movw	r22, r28
  58:	c7 01       	movw	r24, r14
  5a:	0e 94 00 00 	call	0	; 0x0 <_Z14charAppendCharPcS_>
  5e:	f8 01       	movw	r30, r16
  60:	01 90       	ld	r0, Z+
  62:	00 20       	and	r0, r0
  64:	01 f4       	brne	.+0      	; 0x66 <_Z14charAppendCharPcS_+0x66>
  66:	31 97       	sbiw	r30, 0x01	; 1
  68:	af 01       	movw	r20, r30
  6a:	40 1b       	sub	r20, r16
  6c:	51 0b       	sbc	r21, r17
  6e:	fe 01       	movw	r30, r28
  70:	01 90       	ld	r0, Z+
  72:	00 20       	and	r0, r0
  74:	01 f4       	brne	.+0      	; 0x76 <_Z14charAppendCharPcS_+0x76>
  76:	31 97       	sbiw	r30, 0x01	; 1
  78:	cf 01       	movw	r24, r30
  7a:	8c 1b       	sub	r24, r28
  7c:	9d 0b       	sbc	r25, r29
  7e:	b8 01       	movw	r22, r16
  80:	8e 0d       	add	r24, r14
  82:	9f 1d       	adc	r25, r15
  84:	0e 94 00 00 	call	0	; 0x0 <_Z14charAppendCharPcS_>
  88:	c7 01       	movw	r24, r14
  8a:	df 91       	pop	r29
  8c:	cf 91       	pop	r28
  8e:	1f 91       	pop	r17
  90:	0f 91       	pop	r16
  92:	ff 90       	pop	r15
  94:	ef 90       	pop	r14
  96:	df 90       	pop	r13
  98:	cf 90       	pop	r12
  9a:	08 95       	ret

Disassembly of section .text._Z13strAppendChar6StringPc:

00000000 <_Z13strAppendChar6StringPc>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	00 d0       	rcall	.+0      	; 0xe <_Z13strAppendChar6StringPc+0xe>
   e:	00 d0       	rcall	.+0      	; 0x10 <_Z13strAppendChar6StringPc+0x10>
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	8c 01       	movw	r16, r24
  16:	7a 01       	movw	r14, r20
  18:	ce 01       	movw	r24, r28
  1a:	01 96       	adiw	r24, 0x01	; 1
  1c:	0e 94 00 00 	call	0	; 0x0 <_Z13strAppendChar6StringPc>
  20:	b7 01       	movw	r22, r14
  22:	ce 01       	movw	r24, r28
  24:	01 96       	adiw	r24, 0x01	; 1
  26:	0e 94 00 00 	call	0	; 0x0 <_Z13strAppendChar6StringPc>
  2a:	bc 01       	movw	r22, r24
  2c:	c8 01       	movw	r24, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <_Z13strAppendChar6StringPc>
  32:	ce 01       	movw	r24, r28
  34:	01 96       	adiw	r24, 0x01	; 1
  36:	0e 94 00 00 	call	0	; 0x0 <_Z13strAppendChar6StringPc>
  3a:	c8 01       	movw	r24, r16
  3c:	26 96       	adiw	r28, 0x06	; 6
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	f8 94       	cli
  42:	de bf       	out	0x3e, r29	; 62
  44:	0f be       	out	0x3f, r0	; 63
  46:	cd bf       	out	0x3d, r28	; 61
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	ff 90       	pop	r15
  52:	ef 90       	pop	r14
  54:	08 95       	ret

Disassembly of section .text._Z12strAppendStr6StringS_:

00000000 <_Z12strAppendStr6StringS_>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	00 d0       	rcall	.+0      	; 0xe <_Z12strAppendStr6StringS_+0xe>
   e:	00 d0       	rcall	.+0      	; 0x10 <_Z12strAppendStr6StringS_+0x10>
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	8c 01       	movw	r16, r24
  16:	7a 01       	movw	r14, r20
  18:	ce 01       	movw	r24, r28
  1a:	01 96       	adiw	r24, 0x01	; 1
  1c:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendStr6StringS_>
  20:	b7 01       	movw	r22, r14
  22:	ce 01       	movw	r24, r28
  24:	01 96       	adiw	r24, 0x01	; 1
  26:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendStr6StringS_>
  2a:	bc 01       	movw	r22, r24
  2c:	c8 01       	movw	r24, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendStr6StringS_>
  32:	ce 01       	movw	r24, r28
  34:	01 96       	adiw	r24, 0x01	; 1
  36:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendStr6StringS_>
  3a:	c8 01       	movw	r24, r16
  3c:	26 96       	adiw	r28, 0x06	; 6
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	f8 94       	cli
  42:	de bf       	out	0x3e, r29	; 62
  44:	0f be       	out	0x3f, r0	; 63
  46:	cd bf       	out	0x3d, r28	; 61
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	ff 90       	pop	r15
  52:	ef 90       	pop	r14
  54:	08 95       	ret

Disassembly of section .text._Z12strAppendInt6Stringi:

00000000 <_Z12strAppendInt6Stringi>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	00 d0       	rcall	.+0      	; 0xe <_Z12strAppendInt6Stringi+0xe>
   e:	00 d0       	rcall	.+0      	; 0x10 <_Z12strAppendInt6Stringi+0x10>
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	8c 01       	movw	r16, r24
  16:	7a 01       	movw	r14, r20
  18:	ce 01       	movw	r24, r28
  1a:	01 96       	adiw	r24, 0x01	; 1
  1c:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendInt6Stringi>
  20:	b7 01       	movw	r22, r14
  22:	ce 01       	movw	r24, r28
  24:	01 96       	adiw	r24, 0x01	; 1
  26:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendInt6Stringi>
  2a:	bc 01       	movw	r22, r24
  2c:	c8 01       	movw	r24, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendInt6Stringi>
  32:	ce 01       	movw	r24, r28
  34:	01 96       	adiw	r24, 0x01	; 1
  36:	0e 94 00 00 	call	0	; 0x0 <_Z12strAppendInt6Stringi>
  3a:	c8 01       	movw	r24, r16
  3c:	26 96       	adiw	r28, 0x06	; 6
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	f8 94       	cli
  42:	de bf       	out	0x3e, r29	; 62
  44:	0f be       	out	0x3f, r0	; 63
  46:	cd bf       	out	0x3d, r28	; 61
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	ff 90       	pop	r15
  52:	ef 90       	pop	r14
  54:	08 95       	ret

Disassembly of section .text._Z15convertStrToHexPcPhi:

00000000 <_Z15convertStrToHexPcPhi>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	ec 01       	movw	r28, r24
  16:	6b 01       	movw	r12, r22
  18:	5a 01       	movw	r10, r20
  1a:	8b 01       	movw	r16, r22
  1c:	80 e0       	ldi	r24, 0x00	; 0
  1e:	e8 2e       	mov	r14, r24
  20:	80 e0       	ldi	r24, 0x00	; 0
  22:	f8 2e       	mov	r15, r24
  24:	c8 01       	movw	r24, r16
  26:	8c 19       	sub	r24, r12
  28:	9d 09       	sbc	r25, r13
  2a:	8a 15       	cp	r24, r10
  2c:	9b 05       	cpc	r25, r11
  2e:	04 f4       	brge	.+0      	; 0x30 <_Z15convertStrToHexPcPhi+0x30>
  30:	f8 01       	movw	r30, r16
  32:	81 91       	ld	r24, Z+
  34:	8f 01       	movw	r16, r30
  36:	1f 92       	push	r1
  38:	8f 93       	push	r24
  3a:	ff 92       	push	r15
  3c:	ef 92       	push	r14
  3e:	df 93       	push	r29
  40:	cf 93       	push	r28
  42:	0e 94 00 00 	call	0	; 0x0 <_Z15convertStrToHexPcPhi>
  46:	22 96       	adiw	r28, 0x02	; 2
  48:	0f 90       	pop	r0
  4a:	0f 90       	pop	r0
  4c:	0f 90       	pop	r0
  4e:	0f 90       	pop	r0
  50:	0f 90       	pop	r0
  52:	0f 90       	pop	r0
  54:	00 c0       	rjmp	.+0      	; 0x56 <_Z15convertStrToHexPcPhi+0x56>
  56:	df 91       	pop	r29
  58:	cf 91       	pop	r28
  5a:	1f 91       	pop	r17
  5c:	0f 91       	pop	r16
  5e:	ff 90       	pop	r15
  60:	ef 90       	pop	r14
  62:	df 90       	pop	r13
  64:	cf 90       	pop	r12
  66:	bf 90       	pop	r11
  68:	af 90       	pop	r10
  6a:	08 95       	ret

Disassembly of section .text._Z11intToStringiPc:

00000000 <_Z11intToStringiPc>:
   0:	9f 93       	push	r25
   2:	8f 93       	push	r24
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	9f 93       	push	r25
   a:	8f 93       	push	r24
   c:	7f 93       	push	r23
   e:	6f 93       	push	r22
  10:	0e 94 00 00 	call	0	; 0x0 <_Z11intToStringiPc>
  14:	0f 90       	pop	r0
  16:	0f 90       	pop	r0
  18:	0f 90       	pop	r0
  1a:	0f 90       	pop	r0
  1c:	0f 90       	pop	r0
  1e:	0f 90       	pop	r0
  20:	08 95       	ret

Disassembly of section .text._Z9strToChar6StringPc:

00000000 <_Z9strToChar6StringPc>:
   0:	fc 01       	movw	r30, r24
   2:	44 81       	ldd	r20, Z+4	; 0x04
   4:	55 81       	ldd	r21, Z+5	; 0x05
   6:	4f 5f       	subi	r20, 0xFF	; 255
   8:	5f 4f       	sbci	r21, 0xFF	; 255
   a:	20 e0       	ldi	r18, 0x00	; 0
   c:	30 e0       	ldi	r19, 0x00	; 0
   e:	0c 94 00 00 	jmp	0	; 0x0 <_Z9strToChar6StringPc>
