#include <AFMotor.h>
#include <Arduino.h>
#include <Servo.h>
#include "../ultrasonic/Ultrasonic.h"
Ultrasonic uc(22, 23);
AF_DCMotor motor_r(MOTOR2_B);
AF_DCMotor motor_l(MOTOR1_A);
Servo myservo;
const int safeDistance = 20;
const int angleProSencond = 180 + 45;
const int oneAnglePrMillSencond = 1000 / angleProSencond;
void servoReset() {
	Serial.println("servoReset");
	myservo.write(90);
}
void forward() {
	Serial.println("forward");
	motor_r.run(FORWARD);
	motor_l.run(BACKWARD);
	delay(10);
	servoReset();
}
void backward() {
	Serial.println("backward");
	motor_r.run(BACKWARD);
	motor_l.run(FORWARD);
	delay(500);
	servoReset();
}
void turnLeft() {
	Serial.println("turnLeft");
	motor_r.run(FORWARD);
	motor_l.run(RELEASE);
	delay(500);
	servoReset();
}
void turnRight() {
	Serial.println("turnRight");
	motor_r.run(RELEASE);
	motor_l.run(BACKWARD);
	delay(500);
	servoReset();
}
void stop() {
	Serial.println("stop");
	motor_r.run(RELEASE);
	motor_l.run(RELEASE);
}
void turn(int angle) {
	Serial.print("to turn ");
	Serial.println(angle);
	if (angle > 90) {
		turnLeft();
		int _angle = angle - 90;
		int ms = _angle * oneAnglePrMillSencond;
		Serial.print("turn delay time is bigger than 90 ");
		Serial.println(ms);
		delay(ms);
		stop();
	} else {
		turnRight();
		int ms = angle * oneAnglePrMillSencond;
		Serial.print("turn delay time is smaller than 90 ");
		Serial.println(ms);
		delay(ms);
		stop();
	}

}
int turnPos = 90;
int distance = safeDistance;
void changeDirection() {
	Serial.println("changeDirection");
	for (int pos = 0; pos <= 180; pos += 45) {
		myservo.write(pos);
		delay(200);
		int _distance = uc.distance();
		Serial.print("pos is ");
		Serial.print(pos);
		Serial.print(" distance is ");
		Serial.println(_distance);
		if (_distance < 10) {
			backward();
		}
		if (_distance > distance) {
			distance = _distance;
			turnPos = pos;
		}
	}
	if (turnPos != 90) {
		turn(turnPos);
	} else {
		backward();
		delay(500);
	}
}
void carRun() {
	int distance = uc.distance();
	Serial.print("distance is ");
	Serial.print(distance);
	Serial.println("cm");
	if (distance > safeDistance) {
		forward();
	} else {
		stop();
		changeDirection();
	}
}
void testAnglePrtSencond() {
	motor_r.run(FORWARD);
	delay(1000);
	motor_r.run(RELEASE);
}
void testTurnLeft() {
	turnLeft();
}
void testTurnRight() {
	turnRight();
}
void ir() {
	attachInterrupt(2, changeDirection, LOW);
}
void setup() {
	Serial.begin(115200);
	motor_r.setSpeed(180);
	motor_l.setSpeed(200);
	myservo.attach(9);
	servoReset();
}
void loop() {
	carRun();
}
