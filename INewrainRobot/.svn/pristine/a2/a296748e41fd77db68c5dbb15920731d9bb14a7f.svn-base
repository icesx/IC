#include <AFMotor.h>
#include <Arduino.h>
#include <Servo.h>
#include "../ultrasonic/Ultrasonic.h"
Ultrasonic uc(22, 23);
AF_DCMotor motor_r(MOTOR2_B);
AF_DCMotor motor_l(MOTOR1_A);
Servo myservo;
const int safeDistance = 10;
const int angleProSencond = 180 + 45;
const int oneAnglePrMillSencond = 1000 / angleProSencond;
void servoReset() {
	Serial.println("servoReset");
	myservo.write(90);
}
void forward() {
	Serial.println("forward");
	motor_r.run(FORWARD);
	motor_l.run(BACKWARD);
	delay(10);
	servoReset();
}
void backward() {
	Serial.println("backward");
	motor_r.run(BACKWARD);
	motor_l.run(FORWARD);
	delay(500);
	servoReset();
}
void turnLeft() {
	Serial.println("turnLeft");
	motor_r.run(RELEASE);
	motor_l.run(FORWARD);
	delay(500);
	servoReset();
}
void turnRight() {
	Serial.println("turnRight");
	motor_r.run(BACKWARD);
	motor_l.run(RELEASE);
	delay(500);
	servoReset();
}
void stop() {
	Serial.println("stop");
	motor_r.run(RELEASE);
	motor_l.run(RELEASE);
}
void turn(int angle) {
	Serial.print("to turn ");
	Serial.println(angle);
	if (angle > 90) {
		turnRight();
		int _angle = angle - 90;
		Serial.println(_angle);
		int ms = _angle * oneAnglePrMillSencond;
		Serial.print("turn delay time is");
		Serial.println(ms);
		delay(ms);
		stop();
	} else {
		turnLeft();
		int ms = angle * oneAnglePrMillSencond;
		Serial.print("turn delay time is");
		Serial.println(ms);
		delay(ms);
		stop();
	}

}

void changeDirection() {
	Serial.println("changeDirection");
	boolean isTurned = false;
	for (int pos = 0; pos < 180; pos += 20) {
		myservo.write(pos);
		int distance = uc.distance();
		if (distance > safeDistance) {
			turn(pos);
			isTurned = true;
		}
		delay(50);
	}
	if (!isTurned) {
		backward();
		delay(1000);
		changeDirection();
	}
}
void carRun() {
	int distance = uc.distance();
	Serial.print("distance is ");
	Serial.print(distance);
	Serial.println("cm");
	if (distance > safeDistance) {
		forward();
	} else {
		stop();
		changeDirection();
	}
}
void testAnglePrtSencond() {
	motor_r.run(FORWARD);
	delay(1000);
	motor_r.run(RELEASE);
}
void ir() {
	attachInterrupt(2, changeDirection, LOW);
}
void setup() {
	Serial.begin(115200);
	motor_r.setSpeed(200);
	motor_l.setSpeed(200);
	myservo.attach(9);
	servoReset();
}
void loop() {
	carRun();
	delay(50);
}
